representational format of corpus file datum frame    introduction introduction corpus linguistics   sense   book introduction corpus linguistics   little familiar field   probably immediately triggers question   introduction corpus linguistics    valid question   given upsurge of study corpus datum linguistic   good introduction available   need   predictably   think answer   yes     yes   second edition    reason introduction radically different introduction corpus linguistics     lot of thing regularly dealt length introduction corpus linguistics talk     history of corpus linguistics   kaeding   fries   early   word corpora   contemporary giga corpora lively web corpus discussion     compile corpora   size   sampling   balancedness   representativity     create corpus markup annotation   lemmatization   tagging   parsing     kind example of corpora   synchronic vs   diachronic   annotated vs   unannotated     kind of corpus linguistic research     telling discipline of corpus linguistics   history   place linguistics   contribution different field      book       teach corpus linguistic datum processing programming language r      aspect of exactly datum retrieved corpora linguistically informed analysis   specifically obtain corpora frequency list   dispersion information   collocation display   concordance      chapter    explanation exemplification of term      aspect of datum manipulation evaluation   process convert corpus datum   save kind of result   import spreadsheet program annotation   analyze result statistically   represent result graphically   report result   second important characteristic of book uses freely available software     r   corpus linguist purpose tool   cf   r core team         software calculator   statistic program     statistical   graphic program   programming language time   version book r   www r project org   freely available microsoft r open          choice of software tool   especially decision use r   number of important implication   mentioned early   mentioned   r fledged multi purpose programming language     powerful tool     degree of power come cost   beginning   undoubtedly difficult thing r ready   free commercial   concordancing software written specifically corpus linguistic application     want generate frequency list of corpus concordance of word corpus r   write small script little bit of code programming language   technical way of saying write line of text instruction r   need pretty output   script consist of line   longer     ready concordancer   click button   enter search term   job   ask trouble of learning r   variety of good reason   of related corpus linguistics   general     let address argument   r   programming language    use lot of time effort learn programming language result ready software minute   regard time goes learning r   yes   learning curve     time long think   participant bootcamp workshop develop good understanding of r allows begin proceed day   plus   able program extremely useful skill academic purpose   job outside of academia   far learning program extremely useful develops   hones   particular way of analytical rigorous thinking useful general   regard time goes writing script   of usually needs undertaken     written script going book   usually reuse   part of   different task corpus   of time required perform particular task similar of ready program   fact   nearly corpus linguistic task research   somewhat adjusted   script small snippet of code book     explore write function           easily write versatile specialized function   of available subsequent chapter   way   actual effort of generating frequency list   collocate display   dispersion plot     reduces time need concordance program   fact   r faster competing application     concordance program read corpus file processed performing actual task   r requires pass     outperform competitor term of processing time   point related notion programming knowledge useful   knowledge acquire working book general   mean good way   restricted particular software application   version of particular software application   restricted set of feature     acquire knowledge of programming language regular expression allow use different utility understand script programming language   perl python    time   think r simpler perl python   interface rsperl rspython   respectively   www omegahat org      come script people decide turn language   benefit knowing r way ready concordancing software allow   bit familiar corpus linguistic work   think   turn r use perl python   especially perl python similar people use of language     good question   perl corpus processing turned r     think good answer use r instead     issue of speed of problem think   r fast stable application   especially heed of advice given section                  script takes bit of time   simply run lunch   class   overnight collect result   second   r advantage   main probably   text processing capability   r offers large number of ready function statistical evaluation graphical representation of datum   allows perform corpus linguistic task programming environment   datum processing   datum retrieval   annotation   statistical evaluation   graphical representation        environment   wanted thing perl python   require huge of separate programming   consider simple example   r function called table generates frequency table   perform perl small loop counting element array stepwise fashion increment frequency hash   later cleverly   program subroutine   problem dimensional frequency list   harder multidimensional frequency table   perl array of array hash of array    faint hearted   r table easy handle   additional function   table   xtab   ftable      allow handle table easily   believe learning environment sufficiently hard beginner   recommend comprehensive environment greater number of simpler function   clearly r     mastered fundamental of r face situation need maximal computational power   switching perl python limited number of case easier   especially of programming language   syntax similar regular expression book perl compatible    let tell     year r   mere instance switch perl know solve particular problem r    second   learning analysis programming language   usually control actually   different concordance program different setting of handling search obvious   inexperienced   user     ready concordance tool slightly different setting specify   word     means different result different program perform search corpus   yes   setting usually tweaked   means   actually   ready application requires attention detail r   programming language of methodological choice right code replicate     use particular concordancing software   mercy of developer   developer change behavior   result output   default setting   hope documented affect result   case silent internet update changed output of software day   worse   developer discontinue development of tool altogether   let consider sorry state of discipline of corpus linguistics majority of practitioner dependent handful of ready corpus tool website allow search corpus online   somewhat polemically speaking   able enter url type search word corpus linguist   fourth maybe important reason learning programming language r programming language versatile tool readymade software application     ready corpus tool offer functionality aim provide corpora particular format   provide small number of kind of output   r   programming language   handle pretty input generate pretty output want   fact   bootcamp   tell participant day    want hear question begin   r           answer   yes      r readily use chapter    introduces fundamental of r   covering variety of function different domain   area receives consideration of text processing   small change code example      introduce free spacing    main difference edition consist of   chapter    chapter    edition   introduces fundamental aspect of statistical thinking testing   question covered chapter include   hypothesis   check result noteworthy   visualize result   given consideration of space focus   chapter informative   hope   short   main chapter of edition   chapter     brand new   sense   brings       case study     section illustrate aspect of method introduced chapter       applied corpus datum   variety of of corpora   corpus derived datum   datum   learn detail write program r corpus linguistic analysis   text processing   statistical analysis visualization detailed step step instruction   single analysis discussed multiple level of abstraction altogether        line of code   nearly of commented   help delve deeply powerful tool r work   finally   chapter    brief conclusion points handful of useful r package consider exploring   begin   short comment nature of book necessary   book kind of sister publication introduction statistic linguist    book attempt teach lot good corpus linguist   good corpus linguist   combine different methodological skill   equally important analytical skill concerned    of methodological skill addressed   basic knowledge of computer   operating system   file type       datum management   regular expression   elementary programming skill   elementary knowledge of statistic     know          learned of reading   thing        easy book read minute time bed fall asleep   thing mean read book sitting computer run code     work example   particularly important code file companion website contains        line of code huge of extra commentary help understand code better understand reading book   particularly relevant chapter     need practice master concept introduced   rewarded acquiring skill access variety of datum approach considered accessible   happened point decided leave ready tool   undergrad corpus class prior programming experience quickly learned write small program thing better concordance software     facilitate learning process   try help of book     small think break   small assignment try complete read   answer follow immediately text   second   exercise box small assignment   ideally   complete check answer answer key read   necessary complete right away understand follows   return later leisure     box recommendation study exploration   typically mention function need section mentioned    later stage      send question corpus linguistics r list   hopefully   useful response kind soul      post suggestion revision of book     inform reader of error find   of course   informed people find errata     easy book   hope aid help good corpus linguist   work book   able large number of thing commercial concordancing software   of script find taken actual research   fact simplified version of script published paper     recommendation exploration scattered book   probably find new efficient way of application      machine readable   refers fact nowadays virtually corpus stored form of plain ascii unicode text file loaded   manipulated   processed platform independently   mean     corpus linguist deal raw text file   contrary   corpora shipped sophisticated retrieval software makes possible look precisely defined lexical   syntactic   pattern   mean     hard time finding corpora paper   form of punch card digitally html microsoft word document format   probably widely format consists of text file unicode utf    encoding xml annotation      produced natural communicative setting   means text spoken written authentic communicative purpose   purpose of putting corpus     corpus consist large degree of newspaper article   meet criterion of produced natural setting journalist write article published newspaper communicate reader   want fill linguist corpus   similarly   obtained permission record of particular person conversation week   hopefully   person interlocutor usually aware of conversation recorded   obtain authentic conversation conversation produced sake of corpus     use   representative useful point     definition of corpus prototype   implies corpus differ prototype kind of corpora variety of dimension     timit acoustic phonetic continuous speech corpus of audio recording of      speaker of major dialect of american english   speaker read phonetically rich sentence   setting exactly natural communicative setting   consider dciem map task corpus   consists of unscripted dialog interlocutor describes route map interlocutor subjected     hour of sleep deprivation of drug treatment     hardly normal situation   genre widely newspaper text   journaleseis necessarily close prototypical corpus   given newspaper writing created deliberately consciously text   plus come linguistically arbitrary restriction length   central corpus linguistic method    written single person   heavily edited       notion of corpus diverse   people prefer consider newspaper datum corpora   text archive   database of text    produced natural setting     compiled purpose of linguistic analysis      intended representative balanced respect particular linguistic variety speech community   discussion indicated     distinction corpora text archive blurred   theoretically easy   practice adhered strictly     implication kind of   r   programming require     publisher of popular computing periodical makes issue of previous year available website   criterion met       of availability size   corpus linguist use resource   long bears limitation mind term of representativity     little reason   finally   example collection says   collection of example   typically   person compiled example came noted     psycholinguistic research      based collection of speech error compiled researcher helper   occasionally   people refer collection error corpora   use term corpus   easy collection compare corpora       error   occurring frequently authentic speech   difficult perceive hardly collection   analog balancedness problem outlined     perception of error contingent acuity of researcher   corpus research   corpus compilation contingent particular person perceptual skill   finally   of scarcity of speech error   usually speech error perceived   particular of time   included corpus     usually ideally   corpus compiler picky select material included eye criterion of representativity balancedness outlined       sake of terminological clarity   useful distinguish notion of corpora   text archive   example collection   kind of corpora   corpora differ variety of way   distinction familiar able find right corpus want investigate   basic distinction general corpora specific corpora   intend representative balanced language   mentioned limit     design restricted particular variety   register   genre     important distinction raw corpora annotated corpora   raw corpora consist of file containing corpus material   second called body contains corpus datum proper   e    people actually said wrote   linguistic information usually based linguistic theory   part of speech syntactic pattern     matter of debate   follows briefly   non exhaustively    discuss exemplify common annotation scheme     corpus lemmatized word corpus followed   preceded   lemma   e    form look dictionary        postcard       postcard postcard   punct      perspron   verbpast   verbinf   det   postcard nounsing   prep   perspron    punct                p ostcard fr om         difference diachronic corpora synchronic corpora   aim representing language variety changes time   provide   speak   snapshot of language variety particular point time   distinction monolingual corpora parallel corpora   guess name   compiled provide information particular language variety   ideally provide text different language   example include translation eu parliament debate     language of european union   canadian hansard corpus   containing canadian parliament debate english french     ideally   parallel corpus translation different language   translation sentence aligned   sentence language l      automatically retrieve translation language l    l n    distinction mentioned of static corpora vs   dynamic monitor corpora   static corpora fixed size      brown corpus   lob corpus   british national corpus    dynamic corpora constantly extended new material      bank of english    final distinction like mention briefly involves encoding of corpus file   given especially predominance of work english corpus linguistics   recently corpora came called ascii   american standard code information interchange   character encoding   encoding scheme encodes            character number largely based western alphabet   character   special character of ascii character inventory paraphrased         paraphrased    eacute       number of corpus language increasing steadily   given large number of character writing system chinese   practical approach     language specific character encoding developed      iso         western european language vs   iso       chinese japanese korean language      interest of overcoming compatibility problem arose different language different character encoding   field of corpus linguistics moving unified   e    language specific   multilingual character encoding form of unicode   notably utf      development tandem xml corpus annotation   generally   utf    widely character encoding internet   know bit kind of corpora exist   important point   corpus linguistics lot offer analyst   worth pointing   strictly speaking   thing corpora provide information frequency   differently   meaning corpora   function       frequency of occurrence of item   e    morpheme   word   grammatical pattern     occur   part of   corpus       frequency of co occurrence of item   e    morpheme occur particular word   particular word occur certain grammatical construction     researcher interpret frequency of occurrence co occurrence meaningful functional term   assumption underlying basically corpus based analysis     formal difference reflect functional difference   different frequency of   co   occurrence of formal element supposed reflect functional regularity   functional understood broad sense   semantic   discourse pragmatic      intended perform particular communicative function   general level   frequency information corpus offers exploited    subject of chapter   frequency list   section        dispersion   section        lexical co occurrence list collocation   section        concordance   section        frequency list basic corpus linguistic tool frequency list   generate frequency list want know   usually word   occur corpus     frequency list of corpus usually column table word occurring corpus column frequency occur corpus column   notion of word little ambiguous   useful introduce common distinction   word   type   word   token   string   word phrase   contains   word   token        word              phrase       word   type        word          phrase     of       occurs twice   parlance   frequency list lists type column token frequency   find expression type frequency referring number of attested corpus     slot   syntactically defined slot grammatical construction    typically   of different sorting style   frequency order   ascending   typically   descending   left panel of table apart simple form leftmost panel   variety of frequency list found     frequency list provide frequency of word word letter reversed   particularly useful   brief look second panel of table frequency list problematic presuppose linguist   computer program   definition of word definition shared linguist   computer program    need case     following exercise demonstrate   bear mind     need exercise caution comparing frequency list different source     noteworthy aspect frequency list compiled include type called stop list     exclude variety of frequent function word   of        particularly revealing given occur nearly equally frequently     follows   useful introduce distinction lemma word form     goes   going   went   gone different word form belong lemma     remainder of chapter use word difference lemma word form token relevant   computer program normally define word token sequence of alphabetic   alphanumeric   character uninterrupted whitespace   e    space   tab   newline   allow user specify hyphen   apostrophe   special character   frequency list useful variety of purpose     contemporary work usage based linguistics assumes type token frequency of linguistic expression correlated degree of productivity cognitive entrenchment of expression   study     domain of natural language processing computational linguistics   frequency of item relevant   thing   speech recognition     imagine computer gets ambiguous acoustic input noisy environment tries recognize word manifested input   computer identify input straightforwardly     simplistic   strategy assume word hears frequent of compatible acoustic input   area of interest     spelling error correction   frequency list useful way     computer recognize string typo occurs gold standard frequency list of word of input language     list of named entity   second   computer rank suggestion correction computer determines set of word sufficiently similar user input ranks according similarity input frequency   methodological perspective   frequency list useful computing co occurrence statistic   finally   frequency list reflect sociocultural difference   dispersion information characteristic of word   necessarily   correlated frequency dispersion   word similar term of overall frequency corpus differently distributed corpus     dispersion explored visually   quantified   left panel of figure lexical co occurrence   collocation of central methodological concept corpus linguistics of co occurrence   corpus linguist basically concerned of co occurrence phenomenon     collocation   probabilistic co occurrence of word form different vs   different vs   different   absolute frozenness of expression kith kin large     colligation   co occurrence of word grammatical phenomenon part of speech   grammatical relation     definiteness    preference of consequence occur complement   adverbial   indefinite article      grammar   pattern collostruction   co occurrence of word lemma morphosyntactic pattern construction   construction grammar sense   ditransitive construction cleft construction preference of hem occur passive   association of ditransitive form of verb   section restrict collocation natural extension of frequency list   later book   of course deal kind of co occurrence     collocation co occurrence of word   referred collocate     uses letter l r     left     right    number indicating position of collocate respect main node word talk collocation     concordance of word difference   certainly find frequent l   collocate frequent r   collocate     collocate display word tells word occur different position target word frequently   word   collocate display list of frequency list particular position word   look simple example adjective   consider adjective alphabetic alphabetical   note means collocate display read vertically   row    of table difference adjective probably paraphrased easiest stating opposite of adjective   suggestion opposite think break of alphabetic numeric   opposite of alphabetical unordered   refined look datum reveal precise picture   collocate display important tool semantic lexicography   cf   area of application referred semantic prosody   e    fact collocate of word w imbue w particular semantic aura aura of semantic of w proper   of standard textbook example english verb cause   probably sense intuitively   cause primarily   exclusively   collocates negative thing   lexico   grammatical co occurrence   concordance useful collocate display   kind of analysis optimal     obvious collocate display usually provide information lexical co occurrence   number of grammatical feature amenable investigation mean of collocate limited     investigation of lexical co occurrence mean of collocate display problematic   investigate near synonymous adjective big   great   large   deadly   fatal   lethal   looking r    reduce precision recall of result     precision defined quotient of number of accurate match returned search divided number of match returned search   collocate approach reduce precision r   collocate of big big shiny tricorder shiny tricorder   inclusion of shiny   of course accurate   tell semantic of big tricorder       recall defined number of accurate match returned search divided number of possible accurate match data   r   collocate approach reduce recall   seen   miss tricorder big shiny tricorder   final method introduced addresses problem   cost   method   probably widespread corpus linguistic tool   concordance   generate concordance want know   larger precise   context particular word     concordance of word w display of occurrence of w user specified context   referred kwic   key word context   display     user specified context sentence word question occurs   usually highlighting bracketing   use of    concordance displays table campaign notes    fair mention          error collection proven extremely useful spite of   strict corpus linguistic perspective   considered shortcoming        compiler of corpora of lesser spoken language typologist investigating language written record suffer datum scarcity problem     important characteristic of language reflected nearly frequency list   count type occurs particular corpus   usually skewed distribution    type   usually short function word   account lion share of token      brown corpus   frequent type of approximately          e          percent of word type   account nearly     percent of token       token occur infrequently             of token brown corpus occur    observation subset of zipf law   famous of states frequency of type approximately proportional rank frequency list   distribution referred zipfian distribution     term stop list new   probably familiar concept   search engine omit function word entered search field     note     turn interesting finding find adjective exhibit tendency kind of additional premodification       note passing context of regular expression   precision recall referred specificity sensitivity   respectively     strictly speaking   concordance list occurrence of word corpus   program output user specified number of occurrence   usually n occurrence corpus n randomly chosen occurrence corpus   writing new script requires programming skill probably capability of average corpus linguist     download mro operating system mran site layout of pane customized going tools   global option          pane layout     like recommend second step   recommend generate folder    qclwr     home directory hard drive   quantitative corpus linguistics r    nd edition      companion website      qclwr    scripts    directory contains relevant r code book          line of code explanation   example   exercise   answer key   password need unzip file   double quote     hinterschinken        qclwr    outputfiles    directory contains output file resulting r code book   password need unzip file   double quote     kassler     access corpus   able learn code relevant case study   plus actually practice assignment change freely available corpora format of corpora   solved   use of assignment    note regular slash path directory use path r     easily backslashe     check file erratum website necessary recommended correction   finally   recommend set setting of operating system file manager displays file name extension   file name   note r offer base installation   r open source software lively community of people written called package r   package addition r download install   r   load r obtain command   function   later   of default configuration   suggest following     start r   rstudio time   administrator right   linux entering sudo r    terminal console provide password   windows right click r icon start menu choose   run administrator      console   paste line code file    qclwr    script         allcode r     install package book   mentioned   strongly recommend read book sitting computer relevant code file open rstudio   fact      qclwr    script   double click         allcode r   right      qclwr    script   current working directory rstudio   nearly of code presupposes   follow easily   ideally   read book run code discussing   pressing ctrl    enter discuss line of code executed rstudio returns      of course add note r code file directly   ideally preceded pound hash sign        mentioned introduction   r extremely versatile piece of software   calculator   spreadsheet program   database   statistic program     statistical   graphic program   scripting programming language sophisticated mathematical character processing capability   fact   range of function r perform vast restrict discussion radically reduced subset of function   function covered book mainly concerned    load   process   save kind of data structure   special emphasis handling text datum corpora corpus linguistic analysis      load   process   evaluate tabular datum   statistical graphical analysis      unfortunately leave aside intriguing aspect of r     didactic expository reason present shortest elegant way of handling particular problem   present procedure adequate reason   reason include desire    number of function   argument   regular expression manageable     highlight similarity different function      allow recycle part of code     book general introduction r   aim enabling perform multitude of task r   advise consult additional reference mentioned comprehensive documentation comes r rstudio   instructional video   far tell heavily biased direction of statistical analysis text processing     notational convention   of seen   path file folder mentioned like     qclwr    inputfiles   txt    input r usually given block of code        means space character       denotes line break   e    instruction press enter    means   enter character        e    greater space   provided      know code supposed enter   e    enter gray shaded code begin            r code shown inline font convention   like   mean c                occasionally line begin             plus sign   space    supposed enter   begin line r expecting input begins execute function     enter       press enter   r interface look   r waiting complete subtraction   enter number wish subtract press enter   function executed properly   example       wish load package r able use functionality offers   use function library     type load package dplyr   library dplyr       note   works installed package explained      forget closing parenthesis   r wait provide   provide missing closing parenthesis   r execute line   corpus file table datum frame represented figure menu   submenu   command submenu application given italic double quote   hierarchical level application menu indicated colon     open document     libreoffice org calc   given   file   open           delve r   let finally mention way of r documentation   simplest way use rstudio   pane   help   tab   access lot of documentation   helpful beginning   introduction r     learning r online    later   r datum import export    obviously   google of function   package   ton of extremely useful website   video   blog     provide help level of expertise   second   know of function construct need information   type question mark directly followed of function r prompt access help file function       help      sqrt                know like know function   use search field right of   help   tab search   datum structure   function   argument simplest way of r like use pocket calculator   r prompt   enter arithmetic operation hit enter   talk recollect math class school     work variable number   r operate variable name   name represent content of called datum structure   datum structure r variety of form   simplest   vector   contain number   complex   list   contain large table   text   number   datum structure   data structure entered r prompt   complex data structure   likely read file   fact book   reading text file table   processing text file   performing computation table   saving text tabular output text file   of central thing understand r tell simple calculation   command r virtually consists of element   function   parenthesis   argument   argument null   case opening closing parenthesis   function instruction   argument function represent example   let compute base     logarithm of       possibility use log       like sqrt   takes argument   number want logarithm     want logarithm basis   flexible function r   log   takes argument   number of want logarithm   second base logarithm     enter   important aspect way of computing log short version of verbose version   longer version   argument provided labeled name r expects argument of log   x number want logarithm base base     provide argument exactly order r expects   leave label   change order want leave of argument   label argument r knows list of argument means   thing worth mentioning     outside of quote   r care space comma   second   r understanding of input case sensitive   know function log     executed line of code file rstudio   r ignores     use comment line write small script want tell remind particular line   note   case   r store result   outputs   want assign content data structure later use   use assignment operator     sign minus   look like arrow    basically choose long contains letter   number   underscore   period starts letter period     avoid confusion   use name data structure r function   c   log   sqrt function know    result of assignment   content resulting function available data structure defined     store square root of    kind of data structure know vector   named aa     aa   sqrt       check r actually knows vector instructing r list data structure knows   current r session    instruct r output content of vector   default screen    nice short way instruct r assign value datum structure output data structure time putting assignment parenthesis   note assignment operator change value of existing datum structure of data structure   following read   create new version of aa taking old adding       note enter command line separating command semicolon   want rid of datum structure   remove   remove individual datum structure rm   remove   provide datum structure   deleted argument   argument    delete datum structure   finally   look datum structure detail shortly   note function require argument labeled   function default setting argument use argument defined user   function exemplify characteristic actually useful variety of respect sample   function outputs random pseudo random sample   useful     large number of match large table want access small   randomly chosen sample vector of word want sorted random order   function sample argument     x   data structure   likely vector   providing element want sample   data structure x vector of number   r outputs random ordering of number    x   x vector of element   r outputs random ordering of element of vector     size   integer number determining size of sample   default   number of element of x   later determine length x      logical expression   replace false   element of vector sampled   default setting   replace true   element of vector sampled multiple time   sampling replacement      prob   vector of probability element of x sampled   default setting null   representing equiprobable sampling   e    sampling element of x chance of sampled   let look example successively use of label omission default setting   generate vector qwe number          range operator   want draw element randomly equiprobably qwe replacement   enter     provide argument default order   away label   of course different random number    prob null default setting   omit     draw element equiprobably randomly replacement     replace false default   omit   seen argument prob replace omitted of default setting   actually   possible omit size argument   size argument omitted   default kicks r assumes want element of vector qwe     effectively provides random order of element of qwe   fact   idea random ordering of number of    n   need provide r vector giving number        defined qwe   r number   fact   default setting lead extreme case of function call argument   like help start       function q shuts r internally processes argument     element character vector called save   e    sequence of character letter   number   symbol   specifying current workspace   e    data structure worked started r   saved user prompted workspace saved   default     element numeric vector called status specifying r   tell   operating system r shut   default     means   successful shut      element logical vector called runlast   true false   specifying user specified function executed r shuts   default true     want shut r   enter   provided argument   r assumes default setting   requires r ask workspace saved   answer question   r shut send     e     successful shut    operating system     label omission default setting useful way of minimizing typing effort     especially beginning   probably wise try strike balance minimizing typing maximizing transparency of code   ultimately boil matter of personal preference   recommend explicit code beginning maximally aware of option r code uses   section introduce datum structure relevant linguistic statistical analysis   recommendation   study exploration    function    help   provide help file function   try   sample    help sample       function arg formal   provide argument function needs   default setting   default order   try arg sample     formal sample         function set seed   use code file obtain random replicable number    set seed     vector basic basic data structure r vector   vector dimensional   sequentially ordered sequence of element   number character string      word   logical value    obvious vector important   deal detail nearly data structure r ultimately understood term of vector   matter of fact   vector computed square root of        find kind of vector aa function class   determine length of aa       define vector content particular length   senseless right   remember memory efficient letting vector grow dynamically   clearer fact necessary   corpus linguist   of course important know vector contain character string   difference number character string double single quote   freely choose kind of quote use   opening closing quote identical    sake of consistency   use double quote book    note happens apply length   contrary expected   number of character of   james    e        length of data structure   vector contains element    james    r returns     type of vector   distinguish mentioned     vector usually interesting contain item   function concatenates   e    combines   element vector called c   argument element concatenated vector   individual number square root of    vector   surprising c connects vector consisting of element   append    characteristic useful r handle apply vector recursively     adding equally long numerical vector yields vector pairwise sum   happens vector equally long   thing happen     length of longer vector divisible remainder length of shorter vector   e    modulus of length     try          r    shorter vector recycled necessary complete function   frequent case practice shorter vector length     following line   r multiplies element   of number        element of bb           wants   multiply second element of number        second element of bb     r uses element of bb      of number    second   length of longer vector divisible remainder length of shorter vector   operation proceeds far possible   returns warning   characteristic use lot later element of vector named     element of number   named according position   important note   unlike array perl   vector store element of data type     vector contain number character string     try force character string vector previously containing number   r change data type   interpret number character vice versa   r changes number character string concatenates vector of character string   double quote       indicate understood character string   means use calculation anymore   change datum type numeric    apart class   identify type of vector   data type of data structure   str     structure     takes argument of data structure   unsurprisingly   vector consists of number   second of character string   case discussed   vector entered r console read file   following section   concerned load file containing text   usually load vector file   necessary create long vector   sequence of   element repeated   instead of typing r element element   use useful function   rep seq   simplest form   function rep   repetition   takes argument   element   repeated number   of repetition   rep powerful   use argument called   example manually entered vector range   works character vector   data structure list      seq check length return sequence of integer    length of vector   use lot called loop   number vector created increment     set increment value need   following line generate vector qwe number        repeated time sequence   try   finally   instead of providing increment   let r figure   know long sequence needs want equal increment   use argument length argument sep   e    instead of argument   following generates seven element sequence        equal increment assigns number   c   rep   seq   long complex vector created easily   recommendation study exploration    general vector creation function vector   later use create list     change type of vector numeric character string    numeric      character     loading vector r powerful function load content of text file vectors   scan   function central corpus loading operation discussed   discuss variety of argument detail   useful argument of scan   default setting   follows   scan file      double      sep      quote identical sep      n                dec       skip     quiet false    comment char      blank line skip true       file argument obligatory   loading vector file     specifies path file loaded   usually look like   home   stgries corpora bncwe txt    instead of providing path entering directly   use file choose    argument   case r prompt explorer file manager window click way desired file   choose file   r return path file character string     scan     sep argument specifies character separates individual entry file     determines element of vector   default setting   sep      means whitespace character separate entry   e    space   tab   represented        newline   represented    r      n        want read text file vector line element of vector   write sep    n    nearly of time     quote argument specifies character surround text quote   of time sep set sep    n    entails quote automatically set quote        dec argument specifies decimal point character   want use comma instead of period   enter dec         skip argument specifies number of line wish skip reading file   useful     corpus file fixed number of header row beginning of file     quiet argument specifies r returns number of entry read   quiet false   default     quiet true      comment char argument specifies character comment file loading   default character   means specially treated comment loading     blank line skip argument set true   means line represented vector   default setting nearly useful   encounter case section        need set false   let look example     load vector x content of text file    qclwr    inputfiles dat vector txt    looks like figure slightly complex example   imagine file     qclwr    inputfiles dat   vector b txt    looks like figure way load file vector x   line reads file default setting of sep   separated whitespace original file element vector x     looks nicely like vector of word   think happen punctuation mark         second line reads file separated line break element vector x       load text file involve unicode code point   important issue corpus file day typically unicode encoding   specifically utf     unfortunately   way load way displayed rstudio default r console depends operating system   system locale   specific file   example of kind of problem run     windows     system   american english locale    try load    qclwr    inputfiles corp utf    cyrillic txt    small of output    exactly successful   linux mint      locale   precise     problem   fix   query list website indicate   unfortunately straightforward   function scan encoding related argumentsencoding fileencoding   trick   windows linux   following work   iconvlist      supported internationalization conversion       cyr   scan file choose     character     sep    n     encoding   utf         following works linux   windows      cyr   scan file choose     character     sep    n     fileencoding   utf        file   come book   pattern opposite   clear encoding file comes information provided obvious   approach usually end find works best   windows linux   utf    file encoding   based file connection   function file   establishes connection file allows specify encoding argument   connection read function called readlines   exactly suggests   work of time encoding issue   means user chooses file   file establishes connection calls con assumes input comes provided encoding   e    utf     r reads connection   e    file   content of file line line puts cyr   suppresses warning embedded nuls      process   connection file closed     datum import successful   mentioned   strategy found works reliably   use encoding deal book   finally   loading file frequent way use scan   let mention simplest way use scan   enter vector   write scan      scan character        enter number string separated enter press enter twice end input   recommendation study exploration    spector         section          customize input scan    scan     accessing processing   part of   vector covered aspect of load vector   let turn access part of vector part   simplest way glimpse of data structure looks like function head tail   of data structure argument return   head     tail   element of data structure   want number of element   provide second argument head tail     of powerful way access part of data structure mean of subsetting   e    indexing square bracket   simplest form   access   of course change   single element   seen flexibly r handles variable   following extension of simple principle come surprise   negative number   choose data structure designated element   note   later   square bracket actually function   like function name head tail    character string   argument datum structure extract second argument extract   use name of vector element subsetting     useful     like qwe potentially long frequency list of word subset word frequency interested   r offers useful function     of interesting one let r decide element of vector satisfy particular condition   simplest   elegant   solution present r logical expression   r checks element of argument preceding logical operator     output meets condition given logical expression   thing need bear mind logical expression   test identity   uses        know assignment of value argument   logical operator use following   following example illustrate logical expression   fact   use logical vector of true false subsetting like number name   seen subset vector numeric vector square bracket   x       x        element position indexed number   following line shows subset vector logical vector of true false square bracket   element position of true   true false correspond       sum logical vector find true   e    vector element satisfy condition     detailed breakdown   use function table   simplest use looks vector      counts element occurs occurs   provides alphabetically ordered frequency list   note     later   table automatically return count of missing datum   obtain     need add argument usena   ifany     hope foresee use table lot generate frequency list of corpora   corpus stored r word vector element   table takes   illustrates logical expression work   probably illustrates particularly elegant way proceed   regardless of element of x fulfill condition   truth value identify case of true   word   approach scale   meaning practicable datum looking                     time large     look          true false   thankfully   elegant way of   takes argument logical vector      resulting logical expression of kind   outputs position of true   e    of element   satisfying particular condition   note actually looks like english   asking   x      answer   seventh    following example correspond one looked use   central point mix position of element vector element vector   come x         remember output     element x       position    occupies x       following far   able guess element   try write code retrieves element of x larger    smaller    stores vector   think break access element of vector square bracket output of vector   simply write     guess combine expression position number returned logical value returned logical expression   find element of vector fulfill condition   apply length   remember true false interpreted       respectively   sum     fact r uses vector nearly fact great strength makes versatile language   combine subsetting   change element of vector quickly     want replace element of x greater         way of achieving   directly position index returned   true logical vector   apart subsetting   powerful function available processing vector   briefly look     match   discuss simple case   argument of     data structure   usually vector   element matched   second data structure   usually vector   element matched   output logical vector of length of argument true false element of datum structure found found second data structure respectively   let clarify example   example   x         shows element of x       appear   second element          combine logical vector output of     subsetting matched element quickly   function match returns vector of position of      match of initial argument second     argument typically vector    tells     element of x appear   second element of x      element     fourth   fifth element of x appear   sixth element      appears   position    of       clear following line   argument reversed   thing   element of       ninth element of x   second element of ythe     sixth element of x     ask good   useful application of function   of match     recommendation study exploration    identify element vector duplicate of earlier element vector duplicated c                           useful type token count   number of type number of nonduplicated token     duplicated       compute cumulative sum cumsum            cumsum     related way of processing vector uses basic set theoretic concept   let introduce functionssetdiff   intersect   union   vector argument   basis of vector x   function setdiff returns element of vector given argument vector given second argument   function intersect provides element of vector of argument occur vector given second argument   note order element returned determined order occur vector given argument   function union provides element occur combination of vector given argument     order depends vector listed   let briefly mention useful function unique   return function table   function unique takes argument vector factor especially easy explain linguist outputs vector containing type occur token   e    element   of said vector factor   saw   function table takes argument vector factor provides token frequency of type combination of type     g       b     happens vector   little difficult interpret sight   remember vector ordered sequence   output tells possible combination of element g h occur   beginning upper left corner moving right   occasion     g     h   occasion     g   b   h   element    of vector    occasion     g   c     e     f   h   analogously row   position   b   g       b   h   position g   b   h   c    element        mentioned   let finally mention useful function concerned order of element vector   function sort element of vector alphabetical numerical order   appropriately called sort main argument discuss vector sorted argument decreasing false   default setting   decreasing true   function called order   takes argument vector decreasing       provides different output   recognize order   think break output of order applied vector z vector tells order element of z sort specified   let clarify opaque characterization   want sort value of z increasing order   z value           value of order z   decreasing false         second value fifth value of z     b     value second value of z     c        provide order vector   additional vector break tie    word   order produces vector   use subset original element     z    orders original element specified     function turn useful applied datum frame   saving vector function output vector use cat   variety of argument   of discuss   cat       file      sep       append false         obligatory   argument      vector want output   vector element line   probably useful strategy nearly case   enter sep    n    default separator space     append argument specifies   exercise box       handling vector    recommendation study exploration    test element of vector satisfy logical expression               fill argument of cat     spector         section            factor second data structure look factor   factor superficially similar vector   book of importance deal character vector     deal cursorily   straightforward way generate factor generating vector introduced turning factor command factor vector factorized argument   function factor second argument   level   specifies level factor   print factor   level of factor occur outputted unique outputs value of vector     crucially unlike unique   factor level attested factor   want change element of factor   face of scenario     simple   want change factor element factor level   likely attested factor past    case   treat factor like vector   second   complex   want change factor element attested factor   case   redefine factor adding level want change   treat new factor like vector     note   unlike unique   factor level attested element   change element of f   simplest way rid of redefine factor droplevels   finally   note nice function called cut   takes argument numeric vector   simplest form   number of level second   returns factor replaces numeric value factor level categorized     following creates factor f number        creating level replacing number group of value belongs   notation               means   number greater        equal         r way saying            check r formed right group number       obviously                        cross tabulating original numeric vector new factor f   recommendation study exploration datum frame vector relevant data structure retrieving datum corpora   datum frame relevant     tabular output form of corpus datum   recall discussion of frequency list   collocate displays   concordance          second   main input datum structure statistical analysis   created modified spreadsheet software imported r    data structure   basically corresponds dimensional matrix   illustrated section   generating data frame r data frame usually loaded text file generated program   generate data frame r combining equally long vector factor   let assume characterized part of speech   captured variable partofspeech   term of variable   parameter characteristic      variable   tokenfrequency    e    frequency of individual word of of speech small corpus c     variable   typefrequency    e    number of different word of of speech c     variable   class    e    of speech open class closed class   let assume variable datum frame wish generate look like figure    generate vector   column of data frame   note row of datum frame want generate contain datum point   name of column   decide like column contain case number    n name of row   prefer   simply generate data frame datum frame   case takes argument vector factor want combine   note order of vector important determines order of column datum frame   let look data frame property function str   structure   summary   thing output     r generated data frame desired   second   r automatically converted vector contained character string factor     partofspeech class    factor internally represented number      class    closed        open          specified row name   r automatically numbers row   finally   column name output of str preceded    sign   means stored data frame r   access column of datum frame      sign   column   column includes space   need column double quote    way of generating datum frame default use case   loading saving data frame r common way of getting r recognize data frame load file generated spreadsheet software   let assume generated spreadsheet file    qclwr    inputfiles dat dataframe ods   tab comma delimited file    qclwr     inputfiles dat dataframe csv   containing datum frame x   text editor spreadsheet software libreoffice calc    ideally spreadsheet contain alphanumeric character whitespace character   facilitate later handling r software    save file raw text file   libreoffice calc   choose menu   file   save          choose   text csv    csv      save type   format menu     enter file   confirm   automatic file extension   confirm want save datum text csv format file   prompted     ideally choose   unicode   utf      character set     tab    field delimiter   usually   delete text delimiter   second step load    qclwr    inputfile dat dataframe csv   r read table   frequently argument of read table default setting   read table file       header false   sep      quote         dec        row name   na string   na    comment char         argument file obligatory specifies data frame saved   element character vector   enter file choose    prompted choose file interactively      argument header specifies row contains label column   header true    normally case     header false      argument sep   mentioned   specifies character separates datum field   given file wish import   fact of time   setting sep      tab     know dec argument   introduced   english locale   setting changed     argument quote   provides character quoted string       occasion set quote     avoid input problem     argument row name vector containing name row   typically   number of column containing row name   typically      specify row name argument   row numbered automatically     argument na string takes character vector of string considered unavailable missing datum       finally   argument comment char   provides r character separates comment rest of line   like quote   likely wish set comment char        argument x data frame saved     argument file   append   sep   dec way introduced     argument quote specifies want factor level double quote   usually particularly useful editing datum spreadsheet software     argument eol provides character marks end of line   normally eol    n    default     argument row name col name specify like include name   number   of row name of column file   given default setting assumption operating system uses english locale   probably   normal   way save datum frame   accessing processing   part of   datum frame r r function useful accessing part of data frame subsequent analysis   look   let clear memory load data frame    qclwr    inputfiles dat dataframe csv   x   seen use of data frame followed    column   potentially quote   access column data frame x typefrequency   alternative approach use of   provide data structure argument of data structure want access second   typing x typefrequency   probably simplest way achieve objective use attach column of data frame available type of datum frame   way   r know column typefrequency data frame loaded   line output    attached use column name access column prefixing of data frame   undo attach          use detach            note attach data frame column name previously attached datum frame   r   problem   warning informs column of previously attached datum frame longer available typing variable   note want change datum come datum frame   safest detach datum frame   change original datum frame   attach   way change actual datum     copy   attach makes available   general versatile approach accessing datum data frame subsetting   saw use square bracket select part of unidimensional vector   data frame dimensional data structure   need   set of   figure   row column     row column name counted     recall versatile way of juxtaposing different function     want investigate of data frame   variable particular value   way subset of datum follows logically   let assume want define data frame contains row of x referring open class word   variable of data frame available attach   possibility   variable name available     maybe readable way of achieving provided subset   function takes argument data frame subset additional argument logical expression specifying selection condition   way   datum frame conveniently customized different form of analysis     reason   wish edit data frame r spreadsheet program      microsoft excel libreoffice calc limited data set maximally million row   r    million row larger need   frequency list of bnc limit    finally   let mention practical way of reordering datum frame mean of order   introduced   recall order returns vector of position of element recall subsetting access part of vector   factor   datum frame   later list    matter of fact   guess reorder datum frame     imagine want sort row datum frame x according class   ascending alphabetical order     class   according value of column tokenfrequency   descending order    of course use order achieve goal   tricky issue involved   default ordering style of order decreasing false   e    ascending order   actually want apply different style   ascending class descending tokenfrequency   changing default help           apply order tokenfrequency   negative value of tokenfrequency   effectively generating desired descending sorting style     use vector reorder row of data frame subsetting   of course   line   apply function got know   sample   want reorder data frame randomly   useful     randomize order of stimulus presentation experiment able randomly select of datum data frame analysis   way of retrieve number of row need reordered dim   result value number of row second result value number of column   subsetting prop table       reorder row number randomly sample use subsetting change order   of course   different   random   order   alternatively   line   finally   occasion want sort data frame according column sort   increasing decreasing      apply minus sign factor force particular sorting style tokenfrequency   case need use rank   rank orders column factor number   minus sign apply     exercise box       handling datum frame    recommendation study exploration    edit data frame spreadsheet interface r    fix     note view rstudio clicking environment tab small spreadsheet symbol of datum frame want view      merge different datum frame    merge       merge different column row matrix   turn changed datum frame easily     cbind      rbind       package dplyr useful data frame operation     spector         chapter     section        list data frame probably central data structure statistical evaluation r received attention   datum frame actually special kind of data structure   list   specifically   datum frame list contain vector factor length   list versatile data structure turn contain different data structure     list contain of vector   datum frame   list   datum structure discuss explicitly book      array matrix    comment char          vector   c                   sentence              corpus    file             list   list vector   dataframe   vector        different element   vector of number   data frame different column   vector of character string   stored single data structure   important bear mind way of accessing list element subsetting   double square bracket suggested list shown console   way   element kind of datum structure entered list   vector   data frame   vector respectively       happens use general subsetting approach   know uses single square bracket   difference notation double square bracket   happening   finally   named element of list   use   away name   null    of course   access element of list time   list output   use familiar strategy of single square bracket   far looked access element of list   access element of element of list   answer of course uses notation double square bracket   want list       vector   of following option works   intuitive   access of list time     handle data frame list     accessing second element of list   value of row second column   second element of list   element row second fourth column   delete list     figured bracketing use   list extremely powerful data structure   different thing   statistical function output result form of list   want able access result economical way   need know list work   second list facilitate handling of datum     data frame dataframe section   introduced subset access part of data frame share set of variable value level     larger complex analysis   useful able split data frame smaller part   depending value variable takes   saw box   use split   takes argument data frame split second argument of variable   e    column   according data frame split   mention      result of split list   allows access part of list    notation   note split data frame according combination of variable   e    variable    second argument of split list of variable   of course useful thing present tiny example   given combination of dataframe class dataframe partofspeech attested dataframe     split dataframe   list dataframe class   dataframe   partofspeech      elementary programming issue appreciate advantage r offer available corpuslinguistic software   introduce immensely important function   control statement   control flow structure allow apply individual function set of function datum certain condition single time far covering   end   section introduce conditional expression   look notion of loop   finally   turn briefly function replace loop useful faster consume memory   conditional expression situation want execute particular   set of    note structure                   optional    logical expression testing condition represents encountered      context of    expression logical operator evaluated returns true false   returns true   r execute   set of   function    expression condition returns false   r test second condition true     execute   set of   function    execute   set of   function    simple example clarify   recall fact plus sign beginning of line enter version of prompt r displays expects input executing     series of command   wonder series of leading space line   especially said r cares space quote   correct   r care space     function of space enhance legibility interpretability of small script   remainder of book   indentation space represents level of embedding script   line of second example indented space   shows line conditional expression   loop   shortly    write script   convention easier recognize coherent block of code belong conditional expression   of course   use space   tabstop     need conditional expression     of following example actually best treated   clearly indicate need able perform particular course of action particular condition met   want    include corpus file analysis corpus header reveals file containing spoken language     search line of corpus file belongs particular utterance     use certain of code r instance running windows   use of code r instance running linux     include word frequency list frequency exceeds particular value      want use search expression file sgml annotation xml annotation       exercise box       conditional expression    recommendation study exploration    test expression specify expression true false line    ifelse       choose of alternative perform corresponding action    switch     loop section introduces loop   useful way execute function time   r offers use loop   introduce of bit detail   loop   leave repeatloop explore   provide example code file      loop following structure   seq element   line         requires explanation   expression stands choose assign   seq stands interpreted sequence of value   value actually constitute sequence    typically   sequence vector   vector integer    n   generated range operator    seq    let look probably simplest conceivable example   of printing number   of course loop cat       sep    n       didactic example    paraphrased follows   generate variable called index looping   value beginning     value sequence    r executes function   loop   e    enclosed curly bracket     means printing newline   closing curly bracket reached   value user defined sequence   e       perform function loop     function loop executed   assumed value of sequence   e         loop completed exited     kind of sequence certainly frequently   index starts    proceeds series of consecutive integer   means   example   takes value of letter        letter built constant containing letter z    of course   use nested loop     execute loop   aware of fact use different name looping index   j example    example illustrate basic kind of loop conceivable   sense of iteration    later use loop useful way   specify sequence of iteration   loop useful perform particular operation known number of time     know number of time operation repeated     number of time depend particular criterion     corpus      file want search file contain written datum   want r find loaded corpus file header   meaning know header of file written datum   know file   r offers easy way of handling situation   possibility of   speak   making loop flexible mean of control expression   use loop   r skips remaining instruction loop advances element sequence counter of loop   following   boring   example   logical expression returns true   r reaches line printed    printed   example of written corpus datum   check file contains written datum   yes   want     immediately file   way loop flexible break   use break loop   loop exited r proceeds statement outside of inner loop break processed   works   logical expression returns true   r processes break breaks of loop   gets print            proceed   let mention loop slightly complicate replicating script directly console   enter loop   r begin execution final             prompt   able easily recapitulate inner working of iteration   recommendation handle following   loop begins like              want proceed loop stepwise      find fix error    enter line r immediately     happening inside loop   set counter variable   case   value manually writing        way   defined loop depending defined loop actually happening proceed   want loop   want iteration   increment    manually             iterate     understood maybe fixed instruction loop want execute   type real beginning of loop                copy paste script file   way able understand complex script easily     exercise box       loop    rule of programming book serve fully fledged introduction good programming style   r general    fact   shown shortest elegant way of achieving particular goal wanted avoid making matter complicated compact absolutely necessary   continue      given usually achieve particular goal   aspect of reasonable r programming like emphasize help    increase speed of comprehensive task completed     reduce memory requirement processing      reduce risk of losing datum perform comprehensive task   of aspect concerned capitalizing fact r fundamental data structure vector   r apply function element of vector explicitly loop element of vector individually     conditional expression loop extremely powerful control structure of course r thing structure   elegant way achieve objective   way elegant     elegant achieve objective     fewer line of code   second   elegant code easier read     elegant compatible r processes thing manages memory   let look example vector   let assume like determine overall token frequency of open class item closed class item data set   way of   terribly clumsy involves loop determine element of class   open     closed    note important thing   know collect result iteration of loop   means loop contain line iteration result assigned data structure   turn means data structure defined loop presupposes   line of code creates collector datum structure   numeric vector containing       iteration of loop completed   contain result   following better way   requires line of code avoids loop access element of class   best way involves function called tapply   encountered briefly exercise box vector     discuss function behaves given argument   usually vector   part of   like apply particular function   second usually vector factor   list of vector factor   element argument vector like apply function   argument function wish apply   of   function available r   min   max   mean   sum   sd   var      one define   way tell r   level of class   determine sum of value tokenfrequency    note second argument list of vector factor look classifying factor time     exercise box       tapply    area apply family of function particularly useful handling of list   seen list versatile data structure   seen subsetting mean of double square bracket allows access part of list     way of getting information list dealt far   let generate list example   useful thing able determine long part of list   knowledge far   probably proceed follows     sapply simpler   function takes argument   of discuss   argument usually list vector element want apply function   second argument function wish apply       sapply stands   simplify    means   possible   r coerces output vector format   matrix   format   guess write   means   element of list   apply length    great use of sapply allows access part of data structure elegant way uses subsetting function     previous example   function applied list length     want access subset of element   seen subsetting single square bracket   need use single opening square bracket place of length   remember section         provide argument positional index     case want element   note works element of list of kind   example hint interesting   function sapply   sister function lapply   apply data structure given argument function called second argument   okay   far new   interestingly   argument provided sapply   lapply     pass   function mentioned second argument   let simple example   way   lapply takes argument decreasing false   hands   sort   uses specification sort element of list ab specified way   function provide elegant powerful way of processing list datum structure   application of similar use of tapply   sapply   lapply   second useful programming guideline useful split want     smaller part     consider regularly saving interim result new data structure file hard drive combine later   chapter    example    occasionally counteract desire let program operate quickly memory economically possible   generating new datum structure costs memory   saving interim result file costs output time   hard drive access    loading later costs corresponding input time   worth additional effort     program crashes   split program smaller part easier determine error occurred simply script code easier read   true   submit paper wait customary       month outlet need reviewing   time forgotten of   need decipher code way frustratingly similar read code seen   second   program crashes   saved interim result data structure file regularly decrease of work   vital realize way r works strongly encourages modular approach     way r handles memory ideal     r good handling memory of data structure grow     iteration of loop      recall loop example   created collector vector loop   way actually bad practice   collector vector vector filled   iteration step   th slot   means iteration collector vector length     iteration        vector length of     second iteration        vector length of         vector grew bit iteration   slow r vector grows item dealt   example   save currently open file application open run following line   simplest possible operation   putting number time vector   long time let vector qwe grow dynamically     know loop long output   define collector structure   usually vector list   reserve required output slot advance   try   immediately define output vector qwe length of          element   exact operation takes time   laptop script needed minute second   second needed second   wonder   know length of result advance    kind of situation actually frequent assume   yes   concordance of word corpus probably know number of necessary result slot advance   application     interested frequency of word corpus     create collector vector slot   word   loop corpus file   load   retrieve frequency of word file   successively add frequency of word current corpus file summed frequency previous file     start   know output vector element   comparable loop of tapply example          somewhat similar application      interested length of corpus file word sentence   corpus        file   know result vector file   length word          slot    result vector file   length sentence          slot           similar application      interested dispersion of word corpus of        file   means need collect   of word   frequency        file     know output structure list element   of element numeric vector of length         situation like     wanted generate frequency list of reasonably large corpus      millionword bnc   know exact number of word token type advance   possibility   briefly mentioned   loop file   identify word token   use table generate frequency table of   save frequency list separate file   means end        small frequency list file   of lot of memory     second step   second loop load amalgamate        frequency list file   strategy cost time memory trying loop   strategy employ number of time section         second possibility define collector output large definitely able accommodate result   fill slot of vector   left right    let pretend collector vector called coll       slot   file generated output figure   output figure coll small script exemplifies   recommend look code file rstudio added commentary explain process great detail       strategy use time avoid forcing r grow vector   context   program involves loop   useful build line outputs   progress report   screen program working   crashes   crash occurred   example of script line beginning cat   final recommendation section concerned naming practice   of code    chapter     use long name data structure     interest of recoverability ease of parsing recognizing thing     name qwe asd superfast virtually error free type american qwerty keyboard   long run   e    real research project   name sentence tag cleaned corpus file infinitely revealing kind of name      qwe aa   far   recommendation study exploration    apply function user specified margin of datum structure    apply       apply function multiple list vector element    mapply       perform operation similar tapply   different output format flexibly    aggregate            rowsum     character string processing far   concerned generating accessing   part of   different datum structure r     corpus linguist important know r offers variety of sophisticated pattern matching tool processing of character string   section introduce explore of tool   extremely important point right beginning   know corpora   hopefully recall exercise box section       computer understanding of word coincide   of linguist different   absolutely imperative know exactly corpus file look like   term of corpus datum annotation   require going corpus documentation   use unannotated text   part of corpus file   know spelling   formatting   annotation     little example of came undergrad corpus linguistics course generated concordance of found of sgml annotated file of bnc looked   word tagged vbz   means   person singular form of    of stunned second   noticed going   guess   think break answer instance of innit reduction of file   innit tagged bnc sgml annotation    w vbz w xx   n w pnp   know datum   think   easily   surely   ready program require      answer     wrong    alternative knowing corpora   easily   concordance program come refined search option require thoroughly consider format of corpus file interface   hides   decision clickable button smiling corpus linguist   setting     ini file   issue surface repeatedly section of chapter     getting information accessing character vector probably basic character operation r gives length of character string vector   function nchar takes important argument of character vector containing element outputs number   of character of element of vector   recommendation study exploration    determine element of character vector zero character    nzchar     want access of character string   use substr   use argument   character vector of want substring   second numeric vector position   of character   want access   numeric vector position   of character   want access   plural   probably inferred substr handles longer vector efficiently      vector   c   abcd     efgh        vector   c   ijkl     mnop        substr c vector   vector      vector vector combined vector element   different start end position of character applied character vector   extremely useful     know line of annotation     character identifier of speaker located   case chat file childes database   want access line number version of brown corpus   character of line          section                 elementary way change character vector basic way   vector of   character string changed involves changing character lower upper case   name of relevant function tolower toupper respectively   relevant character vector argument   use case insensitive frequency list     elementary way change   vector of   character string involves replacing x character   element of   character vector x character   of function chartr   takes argument     character   replaced   second   character   substituted   needs character argument      character vector operation applied   useful     perform comprehensive transliteration operation single line of code   section          recode phonemic transcription segmental distinguishing vowel consonant   merging splitting character vector regular expression want merge character string   use paste   default argument paste take setting   applicable      character vector     sep       character string   separate different character string merged   space default     collapse null   character string separate different character string merged single character string   use of paste bit confusing beginner   think example explanation provided   way paste works    good news use of example   useful distinguish different scenario   differ regard pasting       multiple element vector       multiple element vector        multiple multiple element vector   scenario    scenario finally   scenario       paste multiple element vector   collapse merged single output string     opposite   function of paste strsplit   split character string character string   argument character vector split   second argument character string strsplit delete split argument   note use character string second argument   r split argument character character   useful immediately character attested file   especially combined unlist table      important note output of strsplit vector   list of     element   contains vector   infer double square bracket    works larger character vector   list part strsplit argument part   useful want split strsplit argument retain information input element of output came   need know element output came   e    want vector of resulting item   add unlist change list long er   vector   probably realize close create frequency list   zxc loaded corpus file   create alphabetically sorted frequency sorted frequency list respectively   example   character string split basis of     space   straightforward   strsplit powerful use regular expression     introduce regular expression   treat function searching replacing character string   searching replacing regular expression section introduce pattern matching function basic manner   e    powerful regular expression technique involving character class placeholder wildcard   end   let generate vector of character string   function called grep   executed invoking regular expression capability   basic form requires argument   element character vector search character vector   coerced character vector   factor   argument found   function returns position of element string searched occurs time   output illustrates property of grep beginner expect        beginner nasty habit think like human   problem encounter regular expression lot   think break   result usually produced slightly differently   specified   grep assumes default setting argument   value false   means position returned   set value true   element of character vector match occurred instead of position number index   second   r of course know word   searches character string returns position of match match   irrespective of searched corresponds user considers word     remember grep returns position of match vector searched maximally   like match returns position of match   of    following line returns                 occurs twice line                  grep answers question   occur   e           occur    set grep argument invert default of false true   position element searched occur   useful function called grepl   returns true false element of vector searched depending search expression attested vector searched   useful later subsetting conditional expression     following shows element of txt contain   eco   second   note case   grep returns position of match vector searched      character string   second   occurs second character string of vector txt   return position of match element of vector   e    fact character string   second   begins character position     second element of vector txt     information retrieved different function   gregexpr   function of powerful search function default installation of r   takes argument basic form of grep   output different   returns list starting position length of match time   companion function regexpr finds match    list vector data structure searched vector   recall behavior strsplit     of vector contains positive integer correspond starting position of match     of vector comes match length attribute provides length of match   usebytes attribute relevant right    important understand hierarchical arrangement     list returned gregexpr vector   element of vector searched    of vector list attribute   fact attribute attribute of vector   of list   represented indentation   vector starting position of match attr    match length    element of text attribute of vector length of match attr    usebytes    attribute of vector indicating byte   vector starting position of match attr    match length    second element of text attribute of vector length of match attr    usebytes    attribute of vector indicating byte   match of search expression element of vector searched   gregexpr returns vector of       access component of output of gregexpr   let assign output of gregexpr data structure   extract numeric vector contains starting position of match element of txt   use familiar double square bracket notation   output voluminous   result simple numeric vector   attribute   suggests thing   use length find match   of   e    txt unlist list gregexpr find match of txt     attribute   want know long match    function   attribute   access attribute of object   think following trick     think break work attribute attribute of list of element of list       turn means access attribute of vector separately bracketing name   alternative attribute function attr   argument data structure attribute want access second argument character string desired attribute   thinking section       write code accesses length of     match txt   think break use sapply follows   list length match separately   line of code   immediately unlist length of match single vector   second line of code      use sapply count match element of txt   place true false indicating match   grepl    position match found   grep       value false     element match found   grep       value true     starting position   length   gregexpr      finally   exact match   painful way   learn logic   easier way   painful way uses gregexpr output retrieve starting point of match element of txt length of match compute end point     starting point end point   use substr extract relevant match original input vector txt     pain end     use substr starting end point gregexpr   argument of substr right   input vector   substr txt argument present case need element of txt time   match     starting end point gregexpr    need second element of txt time   match      need    look code file   provides lot of commentary visually helpful indentation    unlist sapply ge output   attr    match length               painful     useful understand code   let turn painful way of getting exact match     function r called regmatche   argument     character vector input datum   second   object created gregexpr match datum   usually input datum of course      invert false   default   true     easily     e    e    e    e    e    e     unlist regmatche txt   ges output      fact   later create function match   makes easier   second painful way involves function wrote book   revision of corresponding function edition of book   function called exact match    use sourced r running following line choosing file    qclwr    script exact match    r    function exact match    requires minimally argument     argument grep gregexpr require       search expression    default setting   component contains exact match generated unlist regmatche gregexpr                add argument vectorize false exact match      component list   e    regmatches gregexpr               second component numeric vector states part of input vector match      second of txt contain instance      component lists percentage of corpus part containing match   amounts      percent   fourth component main reason write function   returns match corpus element found separates match preceding subsequent context tabstop     print content of exact   match                 txt   csv file   nice column output context preceding match column   match second   context following match   set argument line number greater zero   increase preceding subsequent context number of corpus element   set argument character number greater zero   preceding subsequent context character   opposed corpus element line    suppress generation of fourth component of exact match     interested component     want avoid processing burden of computing potentially tab delimited match   setting argument gen conc output false     note default function deletes space column delimiting tabstop   want   set clean space false   check formal exact match       additional argument       search   e   txt regmatche      exact match    follows   huge improvement manual superlong substr       approach     exact match     e    txt    following main argument of gsub default setting   regular expression   introduced    argument expression want replace   second want substitute instead   argument character vector want search modify   fourth argument specifies search conducted casesensitive   ignore case false     ignore case true    let apply function small character vector txt     want change indefinite determiner     definite determiner        know following work   run   think   think break work function assume r   knows   interested changing             word   indefinite determiner   of course r know     need explicit   primitive way   note     r outputs result of gsub   r changed txt   assign result of gsub txt vector able access vector substitution   example probably straightforward point of self evident   real potential of function discussed emerges coupled regular expression   e    placeholders wildcard   turn   searching replacing regular expression section   introduce important aspect of regular expression   central tool of application discussed   r offers type of regular expression   extended perl compatible regular expression   concerned perl widely chance apply learn different context     maximally homogenize explanation   regular expression written argument perl true necessary case   slow code bit   typically fairly complex regular expression    let begin expression specify     anchor    position of character string character string   caret           specify beginning end of character string     following function matches character string vector txt begins       ignore case true        note expression match particular character string searched       match character of line     speak   matches beginning of line character   provided     search string     maps   character     expression referred zero width test caret consume character   means     character regex engine replace   expression deal zero width test   match consume character   period         means   single character newline          want find occurrence of     followed character   c    enter following r   of course   want larger fixed number of intervening character   use period necessary   raises question of want look period   e    want period metacharacter literally   obviously   period period stands   character newline    means match want     need know thing     character tells r   use particular character wildcard behavior literal character    called escape character r escape character backslash         write     need backslashe   answer backslashe actually character   escape character followed actual backslash   easily verify entering nchar         cat          r      backslashe fact character   r interpreter   instructs r treat second literal backslash   of sequence of character    second says   want period literally   use regex    print     second   need know character need escaped   following list of character non literal meaning   of   line anchor    beginning of character string     double quote needs escaped use double quote delimit character vector makes regular expression    single quote needs escaped use single quote delimit character vector makes regular expression     period stands   character apart newline    want retrieve exactly kind of match   list shows of quantifying expression use     vector british american spelling of colour color occur like retrieve spelling variant   use of fact question mark means   zero occurrence of immediately preceding expression      proceed shown   search expression find singular plural of spelling      colou rs    of course   domain of application of quantifying expression clean text file     changing sequence of space space     think break   write   matter of fact   question mark plus sign special shortcut general notation allows specify       exact number of match of expression like match   add     expression     minimum number of match of expression like match   leaving open maximum    add      expression     minimum number of match maximum number of match n of expression like match   add   n   expression     application of question mark actually shorthand expression involving range     rewrite line grep   co lou r    color   perl true   value true       case clumsy   range expression   think break   important clarify range quantifying expression apply   previous example   emerges quantifier apply immediately preceding character   resist human impulse apply quantifier      colou           applies   u      want quantify consists of element   way r hinted   use opening closing parenthesis group element   character metacharacter        want match occurrence of   st        expression parenthesis treated single element   quantified specified   of course   expression parenthesis contain metacharacter   parenthesis      note period matches character second   additional match      second element   period matches       f    fact   of probably frequent domain notation parenthesis applied involves providing r alternative expression matched     simply alternative parenthesis separate vertical bar   pipe      example   imagine want replace occurrence of       e              u     v    vowel    follows   kind of application   situation wishes replace of individual character   particularly frequent   actually shorter alternative notation uses square bracket      define class of individual character replace    of course hoping thinking   wait second    cw ouldn chartr   answer yes   code file    possible define character class square bracket minus sign range operator     want replace occurrence of letter       h         z     x    follows   note minus sign of character class     z    mean   match            z     means   match of letter       z     want include minus sign character class   position square bracket     match             z    write     az        za     pattern works number     replace number       string                    follows     exercise box       regular expression    case like match character belong character class   use caret      character square bracket   note caret definition of character class square bracket means         caret outside of character class   means   beginning of string     of regular expression character different meaning certain environment     square bracket     beginning of string    of course possible define alphanumeric character number character class way     za z                respectively    r offers predefined character class   character class   written       r   double backslashe    equivalent           e    digit   opposite of character class   e    want write           expressed        predefined character class turn useful of word character   written     w   r   character class short form of define lengthily    za z        unicode character script included        w   opposite   know   obvious combine character class plus sign look   case of latin alphabet   correspond word   word apostrophe hyphen   use character class frequently     class written        stands whitespace character   tabstop   written        space   written              newline   written    n     carriage return   written    r       changing             gives opposite character class   final metacharacter mentioned anchor   zerowidth test   like line anchor           mentioned    expression     b   refers word boundary   position word character non word character   defined order        b   opposite        b   position character of     w   w       w   w    includes   consumes       w       w    note difference search   search consumed replaced   zero width pattern   consume   replace     important potential problem far simply glossed   of concerned r way match pattern   let try   answer clear   ask r match     followed zero occurrence of character followed      way match txt obviously   r returns solution   begins match occurrence of   position     chooses longest possible match   following line of code   regular expression lingo   called greedy matching     want       corpus line matches particular search pattern     corpus linguist   want long match   unwanted material middle    want behavior   imagine interested interesting important linguistic phenomenon existed   e    constituent order alternation of verb particle construction english   e    alternation john picked book john picked book   tagged corpus verb particle tagged      corpus look like   john n picked v book n p   want r greedy matching of handle sentence verb particle construction john n picked v p book n cj brought v pn p   look verb followed later particle   greedy matching return match   sight   suggests verb   picked   goes second particle      pay attention regex gregexpr   note regex operationalizes notion of word   character space   space separate word   according simplistic definition adopted   underscore   separate word tag      likely interested getting know match   way of setting r matching strategy lazy   e    non greedy   applies complete search expression   setting quantifier regular expression non greedy matching   write     u    character of regular expression     consecutive match found     bad     think break match character long     means added space   l            u   makes quantifier lazy   e             w   r stops word character   want     quantifier match lazily         second match greedily     w    gets word     like flexible way set lazy matching   non greedy matching complete regular expression   use greedy non greedy matching expression adding question mark quantifier like use non greedily     desired result   match correct length matched     let apply vpc example   bad   note happens apply solution vector txt   consecutive occurrence probably want         firs      st example    let plus additional theoretically possible    firs     example      example       think break regex engine identified match       second     txt second issue need address far concerned elementary replacement operation     simple match complex match term of searching   replacement far specific element   character character string      of course application     want add match   imagine     like tag vector txt word followed    w    punctuation mark followed    p       obviously simply replace pattern match tag word punctuation mark replaced tag added   obviously   world best tagger   second   simply replace word boundary     b   tag tag word   let look simple tagging example   step   tag   corpus   way        pattern searching defined consecutive occurrence of word character   parenthesis instruct r treat complete sequence single element   set of opening closing parenthesis   number match available of course     replacement        w     instructs r insert remembered match of parenthesized expression search pattern           case amounts search pattern   insert    w      second step works parenthesized subexpression character class of multiple punctuation mark   treated single item   punctuation mark tag    p    added   note fact punctuation mark character class obviates need writing                of course   approach extended handle complex expression     imagine     datum contain date american english format   month preceding day   e    christmas written                want reverse order of month day datum merged corpus file use ordering   imagine of american date use slash separate month   date   year   period     consideration people write april             write         change american date british date slash separator   regardless of separator american date    regular expression look pretty daunting   fact mere concatenation of simple thing covered   parenthesized expression                matches digit   matched   stores matched regular expression               matches non digit character     period slash   of course   sure character datum separate part of date period slash   character class         worked                better choice match part of date separated hyphen               second parenthesized expression                 matches digit   matched   stores match second matched regular expression          actually want think preserve original separator instead of changing slash   think break   replacement easy   want replace potentially rhyming character followed    r     character potentially rhyming character   potentially rhyming character   non word character     looks   test regular expression return match   dog   match   dog    adjacent anymore   check code file   free space commented   code     hopefully   look immediately way improve     think   try   happens element of vector txt final period   improve script regard simplify time   think break solution simpler strategy     instead of final non word character   uses word boundary end     better    expression        b   consumes rhyming character   consequence     expression matches end of string period require separate non word character match rhyming character    second   expression consume rhyming character    need capture second occurrence   expression works     reference     second version actually preferable   example discussion gloss additional issue of approach changed find rhyming word adjacent   meet issue exercise box   final kind of expression discussed referred lookaround   lookaround cover term different construct     left lookaround bit difficult understand beginner   exceptionally useful   key characteristic of lookaround expression    like regular expression seen   match character       position      unlike regular expression seen   match   e    consume character   like line anchor   zero width assertion   return matched match   let look simple example positive lookahead   use positive lookahead match followed       wish consume expression      imagine following vector example     example   c   abcd     abcde     abcdf      want match   abc     abc   followed   de    use positive lookahead like       faced vector txt   time managed of desired match   introduced lazy matching    problem consumed second     available     match   guess   answer consume second      know   positive lookahead   finally   match identified   check code extract   crude approach introduces function paste   works simple case like    negative lookahead allows match followed   example   capitalize     character followed   e    note difference think   fact   different lookahead consume   e        e      negative lookahead especially useful want replace unwanted string   example need discuss detail   imagine sentence sgml word class annotation bnc   format   word preceded tag angular bracket   www natcorp ox ac uk doc urg posguide html    character opening angular bracket of tag tag   w      word     followed space character pos tag     bnc called portmanteau tag   indicate automatic tagger decide of tag apply     portmanteau tag    w aj   vvn    mean tagger undecided base form of regular adjective    aj     past participle of lexical verb    vvn     apart pos tag   information included     tag named     contain value pair providing number of sentence unit file   tag named   ptr   indicate overlapping speech contain value pair identifying location speaker of overlapping speech   example   imagine want delete tag word tag punctuation mark tag   word   want tag look like     wc                 unfortunately   negated character class   involving     wc     work r understand mean   w      c    space character alternative   meaning     w      c        okay     yes   looks nice          lucky example   tag like    wtr target kb lc        begins    w   want delete   look happen   tag   wanted delete   deleted     match   looking   w     c   followed space   tag   w   followed non space   problem arises   w   beginning of tag question   space second position   answer problem negative lookahead     try example   example   works   important understand works   let detail     expression matches opening angular bracket       problem     negative lookahead says   match parenthesized lookahead expression   e    character       opening angular bracket     negative lookahead   match     wc      tag    w unc    matched expression match negative lookahead     w unc    exactly       says match   holds tag   regex engine arrives    ptr target kb lc          different happens   regex engine sees      notices character follow         wc                          matches   consume   engine       string   ptr target kb lc      matched         closing      matched         matches   r replace      effectively deleting   useful approach know of script handle bnc file use of expression   clean   file search   overlap tag interrupt sequence of word interested      extension of deletes unwanted tag   material follows unwanted tag tag   recommendation study exploration    match positive negative lookbehind   explore                note perl compatible regular expression unfortunately allow variable length lookbehind     exercise box       regular expression    merging splitting character vector regular expression saw section        split character string strsplit   treatment of strsplit involve regular expression   function handle regular expression way grep function   let exemplify mean of character string found like bnc sgml annotation   word preceded pos tag angular bracket   example   imagine want word rid of tag   looking   alternative     simply delete tag   gsub   strsplit space   second   strsplit tag   better   think break bit of trick question   obviously   second better operation   potentially important reason   look excerpt bnc file shown figure pursue of strategy   end following word token            of     obvious      reason    pursue second         of     obvious      reason   splitting tag lose   potentially useful   information bnc compiler considered of multi word unit   think seemingly small decision potentially big implication   generate frequency list of bnc approach   lose count of multi word unit of   spite of   of     increases frequency of of     spite     frequency list generated second approach problem   second approach   tagtext   want split character string tag word element of overall vector       function looks occurrence of    w    followed character      splits string point   recall unlist let r return vector   list   works fine     life usually simple   thing   tag correspond pattern    w             fact   punctuation mark tag   saw   look different     able find quickly   solution work tag beginning    w       c     result shown        life complex   recall able accommodate portmanteau tag   way of handling   alternative   range     expression looks character character followed hyphen character   possibility involves expression range looking seven              character   strictly speaking   alternative better restrictive   specifying nature of seven character detail    final thing nice     strsplit splits tag   remove space word   like great nuisance   reading   look word think way problematic corpus linguistic application   think break think of   consider happen vector tagtext looked like   problem arises apply regular expression version of tagtext     occurrence of   service   following space     following space   second   second followed space character one vector tag text     followed space immediately followed punctuation mark   problem wanted generate frequency list table   know   r of course treat   service     service    differently   presumably want     better solution look like   e    solution deletes space     recommendation study exploration    approximate pattern matching    agrep    check   adist       spector         chapter        regular expression general   particularly relevant area   unicode xml note handling unicode section looks non english non ascii datum   corpus linguistic work english   chapter far anglo ascii centric   section going deal datum involving unicode briefly looking datum involving cyrillic character   good news bad news   good news nearly read far applies unicode file cyrillic character     small change   use regular expression     w       w        b   work   defined regard latin alphabet    major   bad news windows user   r windows   straightforward handle unicode r macos x r linux   mainly fact mac os x linux utf    operating system play input file encoding   of reason            recommend corpus processing r linux machine   takes little time install long term support version of     kubuntu linux mint desktop computer    let load file utf    encoding   like actually nearly   non western european character   file cyrillic character looked     qclwr    inputfiles corp utf   cyrillic txt    let briefly look generating frequency list   treat way of creating case insensitive frequency list of word file   of involve strategy of splitting corpus file strsplit   differ define splitting   of basically different   reduce of exposition code   understand problem   little interesting     determine character file of want use strsplit     find character corpus file   think break need remember strsplit splits   element of   vector characterwise splitting character provided     tells pretty exactly character use splitting   worry   semicolon single quote    proceed   way   note apply tolower toupper familiar way problem   mentioned   difference treatment of ascii datum american english locale   use character     b       w   perl true word character depends locale   cyrillic character simply of ascii character range   za z      nice alternative worth knowing   brings second way split corpus file word   character point   usefully   character range   specifically   access unicode character r individually sequence    u   followed digit hexadecimal number     important consequence     know unicode character number   use number character   particularly handy     want define search expression cyrillic character cyrillic keyboard want fiddle system keyboard setting     example     look character russian word meaning     unicode website site wikipedia    construct   console   assign character vector   search expression grep   gregexpr   exact   match        second   character of alphabet concerned come range   easily define character class hexadecimal unicode range     small capital character of russian cyrillic alphabet defined follows      russ char yes capit      u       u    f u              russ char yes small      u       u    f u           note square bracket define character class of character string   use character vector search expression grep    of course means easily define non word character nearly     regular expression engine actually variety of predefined called unicode block   e    contiguous range of code point   perl compatible regular expression r use support predefined unicode block   way of defining range manually probably best choice      second way create kind of frequency list   split occurrence of character cyrillic letter   compare output   learn important lesson   word   daminnad   shows time list   second   of course character word cyrillic character defined unicode character range   strsplit     effectively deleted     note       daminnad   ascii     look human eye mean unicode character     look like ascii space comma file    qclwr    inputfiles corp utf   mandarin txt   ascii character     careful define splitting character   final way based fact predefined unicode category use regular expression defines called property   regex involves syntax     p             replace        of property wish use   code file provides example of unicode category set property   www regular expression info unicode html provides    use property define socalled unicode script task of creating frequency list of russian word cyrillic alphabet     word     exact match       p cyrillic      corpus file    gen conc output false      approach returns result second   of course presupposes writing system studying predefined unicode script   let turn concordancing unicode datum   nearly ascii datum   main difference   perl true   use        b    let begin simple example look russian word meaning             define search word   useful immediately parenthesis use referencing later     want tabstop match    simplest way look of course use search word search expression grep     look search expression find example       of adjectival inflection         e            of derivational morpheme           rid of false hit   decide find       nonword character   use     b    define search expression   know cause problem match beginning end of line preceding subsequent character respectively   choice   define better word boundary use negative lookaround   illustrate option function exact match      better word boundary   add beginning end of character string non cyrillic character range defined earlier   create use new search expression      search expression   paste   word boundary   search word    word boundary        desired match line found plus fifth line   alternative involves negative lookaround   look search word   character cyrillic character range of character cyrillic character range     match returned     of match actually involves match beginning end of string   let approach   involving defined word boundary   works looking russian translation of        define search expression like perform search exact match     match of      word returned   desired   line initial match eighth line found   concludes brief excursu unicode character search section     important issue   like encourage familiar kind of encoding   exercise box          exercise box       unicode    note handling xml datum xml   extensible markup language   of widely format corpora come   typically format of choice information form of markup annotation   recall section         added transcript written text corpora contain   useful briefly discuss datum processed r   discussion of xml   provide input file small subpart of file      xml   bnc world edition   code result obtain run relevant code complete file   bnc world edition xml format freely available   space precludes exhaustive discussion of xml format   comment probably order   xml hierarchical format   lends representation tree allow cross nesting overlapping   add datum markup annotation form of start end tag   contain attribute value pair    start tag   attribute value pair    fact seen example similar annotation     consider figure want process xml file r   way   simply previous section of chapter   treat xml file regular flat text file   essentially paying attention hierarchical structure of file   use regular expression find exactly want   fast unproblematic admit vast majority of work xml file   way   of   r package dedicated xml processing   use package xml   www omegahat net rsxml   version            package xml     xml file bnc stored utf    text file   load scan convert function    c      pnp    means   claws    tag of word annotated pnp    means   personal pronoun       hw        means   lemma headword of word annotated       pos     pron    means   coarse grained pos tag of word annotated pron    means   pronoun     example end tag   referred elementscan seen figure note theoretically store information format   information shown figure explore root bit     running xmlname    root     xmlattrs    root      purpose buy   interesting access information figure check content of of root part   hierarchically represented object similar browser element character vector   output shown      explore header   header of   corp    xml   shown figure main corpus   stext   figure easy access specific utterance characteristic part   content   brevity sake   let define object containing utterance look detail   retrieve code of speaker said      psunk    e    speaker unknown    of utterance tag    u       u             size of utterance term of immediate constituent   e    sentence    actual data value of utterance       useful way of accessing corpus datum xml file of following     function xpathsapply argument object returned xmlinternaltreeparse   object    file    second argument defining hierarchical level want operate   optional fourth argument function want apply maybe additional argument function     function xmlsapply argument root of object returned xmlinternaltreeparse   object    root   second argument function want apply    root part     approach tell part      xml     line of code read   apply xpath syntax element of    file level right bncdoc level   e    topmost    of element level   return    remainder of section focus use xpathsapply find straightforward useful work     use following kind of command   enter          xpathsapply xmlinternaltreeparse file     location hierarchy    fun          fun usually of    function     xmlvalue    xmlattrs    xmlgetattr     code file provide code alternative xmlsapply function called getnodeset   want skip   focus approach xpathsapply    of time   output voluminous   given   find surprising target lower level like   changes location description   essentially uses slash notation reminiscent of folder structure computer   part of header part of   interestingly   apply logic of root   stext   use xmlvalue immediately content of corpus file markup annotation use regex   instead of absolute path   xml tree single slash separated part   use relative path indicated slash skip multiple intervening level   following jumps right utterance level stext accesses utterance separately   means apply sort of text processing function   nchar utterance length character    means access level right away   sentence   word   punctuation mark   info header nature of datum   spoken conversation   check immediately identify length of utterance   term of component   e    sentence   speaker of utterance   extracted            attribute value pair of utterance tag   figure example getting attribute value pair of xml tag     looked retrieving data value of xml datum   of course want use detailed annotation tag   approach xpathsapply            xmlattrs   works best tag attribute   utterance tag   cumbersome element attribute   code file matrix output     seen word annotation provide attribute value pair   differently detailed pos tag word lemma   retrieve easily   function xmlgetattr specification of attribute want   hope reminiscent of function attr discussed    finally   let advanced search   search tap level of annotation time   feature use checking attribute level certain value   of following line read   apply utterance element of    file value   e    speaker       ps      function xmlvalue   extracts data value     returns nice character value of   ps     utterance   second line retrieves word c   tag says modal verb   note logical expression checks c   tag   vm    uses single quote separate opening double quote    w   following example work add layer of complexity return data value of element meet certain condition   attribute value   pos tag   lemma second    finally   let recognize combine logical condition level of hierarchical organization different level   example determines modal verb combining condition level of word tag   c   hw attribute value pair   second determines certain speaker uses lemma modal verb combining condition utterance level additional one word level   adds condition sentence level     package allows powerful search of kind expect database   of   targeting word tag   regular expression   kind of search exemplified end useful knowledge of use r xml xpath search allow combine information different level of annotation relatively easily   of possible treat xml file text file   trust   painful   follows   provide brief overview of additional way xml package help search xml corpus datum sophisticated way   focus thing       speaker specific information retrieved       search retrieve information different level of xml tree        xpath syntax aspect allow simple character processing   example based bnc word edition file    qclwr    inputfiles corp h     xml    of header shown figure given previous discussion   following obvious way of retrieving information speaker list   line         retrieving name of attribute provided speaker   line     previews notion of anonymous function learn section         retrieving specific characteristic speaker   line         line similarly obvious   apply logic of logical expression xpathsapply applied sentence   word     person tag header   following line retrieve attribute of     male speaker   line          attribute code utterance tag use attribute   line      data value of tag   turns    ken    line      note unfortunately expect complete consistency datum time   tweak line retrieve datum female speaker   replacing         f     xmlvalue return female speakers   name occupation   know male speaker   easy retrieve said sentence   line     word   line      combine kind of query discussed     find inflectional form of verb lemma work male speaker uses   let finally mention xpath allows exploit feature of hierarchical tree xml file represents     use called xpath axis define relationship different node xml tree kinship ordering term ancestor   child   sibling   parent preceding following     following line retrieves h    file utterance speaker   ps ad    specifically sentence       looks word pos tag   verb   lemma   work    recovers data value of preceding word   sibling of work virtue of sentence    code file similar example   line   example similar retrieve data value   value of attribute   lemma annotation   specifically   retrieves h    file utterance speaker   ps ad    looks word pos tag   verb   lemma   work    recovers hw attribute   e    lemma   of preposition        sibling of work virtue of sentence    second   xpath allows use called predicate utilize numerical textual characteristic of datum search   predicate work similarly logical expression know       u       ps ad      stating condition selecting data value attribute    condition true   space permit exhaustive discussion of xpath offer   example of predicate   name obvious   shall suffice   line     return word character   include space   line     word beginning character   q    line      line return sentence contain word beginning   q    line     sentence number file   line        xpathsapply h    file      w starts text      q      parent      xmlvalue       xpathsapply h    file      w starts text      q      parent      xmlgetattr    n      finally   line retrieve sentence beginning      line     word beginning   w   sentence beginning      line        hope obvious basic knowledge of xpath use r good thing corpus linguist   let finally briefly mention package xml    useful avoid xml package memory leak windows   package   load xml file follows   access information structure part of object following set of function   easily convert result character vector handle regular expression   following line retrieves adjective   section introduces function handle file folder   of thing usually perform part of operating system explorer ms windows   file directory operation encountered of important function   major kind of operating system   windows   mac os x   linux   use function file choose interactively choose file file manager window   windows   additional function choose file allows interactively choose file reading writing   create new    mac os x linux   function unfortunately available   bit of workaround based package rchoicedialogs   requires package rjava load follows   package provides useful function called rchoose file   allows interactively choose multiple   existing    file returns path of file chose character vector   loop     load file scan    important function directory     package rchoicedialogs provides useful function called rchoose dir   allows interactively choose existing directory   windows create new      need know bit r working directory   e    directory accessed directory provided given function   default   e    changed r default setting   r installation directory   logged user main datum directory     use rstudio double clicked r script file            r     directory file located   of time working book      qclwr    script    output operation chapter    assume   easily find current working directory getwd argument prompt   want change working directory console   use setwd provide argument character string new working directory   manually rchoose dir      note rstudio windows   explorer window come foreground alt tab way   find taskbar    specifies directory content listed   argument provided   current working directory   second argument optional regular expression restrict output              file of bnc world edition   xml version   directory   want file name starting      proceed   default setting of argument returns visible file   change true   hidden file   default setting of fourth argument outputs name of file folder path of directory searching   set argument true   complete path file folder   usually recommended   way   function basename exactly opposite   cuts path information     basename     qclwr   bestbookever txt      finally   default setting recursive false returns content of current directory   set true   content of subdirectory returned   of course useful corpus file come particular directory structure     use following line script prompt user input directory store name of file directory subdirectory vector called corpus file   chapter     apart number of file directory name     retrieve useful information r   function file info takes input vector of file name outputs file directory   size of file   file permission   date time of file modification   creation   access     easiest comprehensive way detailed look working directory   file management function   self explanatory   provide of option advise explore documentation detail     file create x   creates file   character vector x     dir create x   creates directory provided character string directory working directory relative rooted directory     dir create   temp    create directory called   temp   current working directory dir create      temp    create directory called   temp   directory current working directory     unlink x   deletes file directory character vector x   file remove x   delete file     file exists x   checks file   character vector x exist       download file x        downloads website url x       http              file        specified      need use data structure   data frame list       want save file   save data frame tab delimited text file write table   easy use software   file large opened software    spreadsheet software microsoft excel libreoffice calc    option of raw text file easily available list   finally   want save disk space save datum   compress time   case   want use save   simplest syntax   deal   documentation detailed coverage    save object binary compressed file   usually smaller corresponding text file   gave extension    rdata    makes datum available new r rstudio session simple double click   example   consider data frame aa following structure   detail factor level    omitted    prompted choose file   data structure   available   type ls      console listing of object current workspace      save r workspace   data structure   user definable file save image   useful store intermediate result later processing   rdata file   file loaded r   double click open r restore workspace   open file image viewer      gimp   look   recommendation study exploration    read tab delimited text file    read csv       produce text representation of object file    dump      dput       divert output file instead of screen console    sink       handle compressed file    bzfile      gzfile     writing function final recommendation fact r statistic software fledged programming language means limited function exist r package install   fairly easily write function facilitate automate tedious frequent task   section small example of logic of write function   extremely useful turn case study chapter     let imagine scenario want generate frequency table of vector   normally table   want table sorted alphabetically   table default   frequency   sort table         want table sorted order of occurrence input vector   let quickly generate vector contains random sample of letter of alphabet     letter      means want frequency list frequency of letter   c    of        f      j           c   covered      easiest way write function consists of following step     write code use write function   e    far      determine of datum structure code required code function work     wrap function definition code      function definition requests defines required datum structure   want add      begin step     vector qwe of want frequency list   sorted particular way   probably generate default frequency list   want output ordered mentioned   means need find letter actually attested qwe   e    name of frequency asd   position shows qwe    formulation remind of function match     quote    match returns vector of position of      match of initial argument second    means letter      of asd   shows position     of qwe   letter   b    second of asd   shows position     of qwe     crucially   letter   c    of asd   shows position    of qwe     turn means thing       want output reordered       c    comes            comes second          ordering of number   apply number order asd         completed step    of writing function   turn step    look code wrote determine datum structure minimally required thing work   turns data structure required input vector   called qwe   data structure use   asd   asd derived qwe     turn step     code wrote   wrap function definition   let assume want function table   stocc   table sorted occurrence    ensure user forced provide input vector   use revealing name qwe   asd   like   code   assign like function output   sorted frequency table   object called output     ending function definition return output    returned result of function   test new function giving qwe argument   function maps qwe function internal usefully named input vector executes problem   save little bit of code   function definition   worry   task comes      remember function   problem solved   let briefly discuss interesting application   function use lot script chapter     function matches   let generate example vector txt   let assume want find word end      use regmatche gregexpr want result vector   finding exact match like   maybe vectorizing   definitely frequent task corpus linguist   nice shorter repeat argument txt twice     write function matches   way   line defines function matches   specifies requires argument   search expression input corpus vector     function definition states additional argument pcre default   e   specified user   set true   additional argument vectorize     user change setting   r function run   finally   ellipsis end of function definition   stands   argument user want provide certain location body of function   ellipsis taken    body of function defines object output nearly exact code manually        sets gregepxr perl argument value of pcre defined match called   e    default true        uses value of vectorize decide user receives vector   default   list        passes argument user provided match regmatche function   means     use invert function    of course   function provide   exact   match     tweaked accept invert   needed functionality   update exact match    accordingly    hope useful recognize task repeated lot efficient define function   usually speeds process considerably   makes code easier read   use function lot of time case study   use exact   match     match     yield result      exercise box        writing function    penultimate recommendation of chapter concerned useful notion of called anonymous   inline   function   function      defined given    want use sapply access element of word count number of word type   function count number of unique word typesthere function count number of token   length     following want   word   applying length element of word   need apply length result of applying unique element of word   function length unique         solve ad hoc following bit of code   works   didactic purpose want talk solve function   importantly   anonymous inline function     define function like   return strictly speaking necessarythe function automatically return assigned object      like overkill   following   body of definition of type second argument slot of sapply directly   following line   apply element of word nameless   anonymous   function requires argument internally called x r applies length unique x     note of course use x   use   like regular function   use      slot of length unique         way   avoid define function definition application of function line   inline    note x function definition available outside of function   means matter object called x run line   means run line object called x   x duration of anonymous function retained general workspace   anonymous function useful use occasion   finally   of book uses functionality base r minimize user   dependence function additional package   introduce change backwards compatible base r     of exception want practice involves extremely useful operator package dplyr      library dplyr     remember generated exact match   normal   r code   like   heavily commented version line indentation code file      annoying   thing   want understand code   process inside   thing gregexpr search   result of passed outside regmatche   result of passed outside unlist   exactly intuitive   example involves short line nested function call   operator      simplify making order write function code order executed   simple example   read   txt apply nchar    nchar txt      function nchar requires argument      operator takes left hand   lhs   vector txt   makes argument of right hand   rhs   function nchar    lhs argument of rhs   use period indicate rhs lhs   following example   txt second argument of   match   read   txt match   second argument   look     w   b      apply line returning match   following read   txt   thing searched gregexpr   e    gregexpr second argument    result gregexpr second   match datum   argument of regmatche   result unlist    of course reader friendly concise function matches   reader friendly previous code version multiple embedding   read   order thing   read code inside   usual left right      check code file sleek definition of table   stocc operator allows write   operator takes bit of getting good use of remember operator subsetting subtracting written function                 useful alternative multiple embedding of case study chapter    provide traditional code        alternative   notes    let r output vector screen unlike long shown row anymore   r use line necessary represent element of vector   line start number   square bracket   of element of vector given line   try   enter          prompt     actually generally important concept   r shows missing unavailable datum na   happen different reason   let mention aspect relevant present context     check   element of   available function na takes element tested argument     vector consists of number     na   gives false     number      na   future research deal frequency empirically sound statistical professional way         long run   linguistic theorising firm grip statistical method lead corpus linguistics dead end street   introduction statistical thinking begin actually explore way corpus datum analyzed statistically r   need cover basic statistical concept   concept of variable   variable symbol of set of value level characterizing entity figuring investigation   remainder of chapter   variable printed small cap     investigate length of subject   counting length word    subject of man went work gets value of    variable length   way variable distinguished   term of role play analysis term of information value   level of measurement   variable role analysis need distinguish dependent independent variable   dependent variable variable behavior distribution investigate wish explain   independent variable variable behavior distribution think correlates happens dependent variable     independent variable   necessarily   cause happening dependent variable     variable information value brief chapter distinguish class of variable   variable class lower information value of of categorical variable   given read section       surprised read categorical variable of kind usually stored factor r   maybe character vector   variable class distinguished of numeric variable     syllabic length of np numeric variable   example pitch frequency hertz   word frequency corpus   number of clause successive occurrence of ditransitive corpus file   reaction time stimulus millisecond     given read chapter     correctly expect variable stored numeric vector r   classification of variable term of role analysis information value important choose right statistical technique evaluation of datum statistical technique applied kind of variable   hypothesis   formulation operationalization of central notion statistical analysis of hypothesis   term hypothesis somewhat stricter sense everyday sense of   assumption    following criterion needs additional explanation   second criterion requires little elaboration   logic criterion   hypothesis typically of syntactic form   need   required statement transformed conditional sentence     statement average   english subject shorter english object explicitly instantiate conditional sentence   transformed   constituent english subject   average shorter constituent english object       statement frequent word sense frequent word explicitly instantiate conditional sentence   transformed   frequent word   sense   criterion briefly commented   means conceivable state of affair hypothesis false     drinking alcohol influence reaction time of subject experiment hypothesis sense influence basically means   influence    result of experiment   influence lack of   compatible hypothesis   note criterion mean falsifying state of affair observed   means imagine   happen   recognize   virtue of similarity imagined outcome      hypothesis characterized invoking notion of conditionality   characterization reiterates central distinction of variable   independent dependent variable   simplistically speaking   independent variable variable mentioned clause clause   dependent variable variable mentioned clause second clause   important understand     parameter according hypothesis classified   parameter refers contrast called alternative hypothesis   abbreviated h      called null hypothesis   abbreviated h       usually   hypothesis     look dependent variable   states value level of dependent variable follow random distribution of investigated entity   expected distribution normal distribution uniform distribution      look dependent independent variable   states value level of dependent variable vary non trivially function of value level of independent variable      average   english subject shorter english object alternative hypothesis states non trivial of variation find length of xp fact xp instantiate different grammatical relation   subject direct object   h      contrast   logical counterpart of h        look dependent variable   states value level of dependent variable randomly distributed vary quasi systematically specified distribution   normal binomial distribution      look dependent independent variable   states value level of dependent variable vary non trivially function of value level of independent variable    form h    inserting h       average   english subject shorter english object    typically h    states effect     average   english subject english object differ length average   english subject english object equally long    second parameter concerned language of hypothesis   speak   h    h    come form   of seen   text form natural human language   form   translation   statistical form mathematical language   brings issue of operationalization   process of deciding variable text hypothesis shall investigated   word   answer interrelated question      perceive perform study observe value level of variable involved    second    mathematical concept use   count frequency   average   dispersion   correlationswhen couch hypothesis numeric term    necessary     formulation of hypothesis text form leaves open exactly counted   measured       case     clear know particular subject longer particular direct object       younger bachelor ate nice little parrot   regard question of subject object length   sentence support h    h      depending operationalize variable length   operationalize length   number of morpheme    subject gets value of       young   comparative   er   bachelor   plural   direct object gets value of       nice   little   parrot      operationalize length number of word   subject object value of       respectively   finally   operationalize length   number of letter   space     subject object value of      regard question   decide mathematical concept     investigate        sentence choose operationalize length number of morpheme   hypothesis involve average   h      average length of subject morpheme average length of direct object morpheme   mean length of subject    mean length of direct object   h      average length of subject morpheme different average length of direct object morpheme   mean length of subject    mean length of direct object   frequency   h      number of case subject longer   morpheme   direct object number of case subject longer   morpheme   direct object   h      number of case subject longer   morpheme   direct object different number of case subject longer   morpheme   direct object   discussion far focused situation maximally variable   dependent independent   of course life usually simplethere virtually determinant phenomenon   deal statistical technique deal independent variable   gries        ch       important understand phenomenon approached conceptually   talking alternative hypothesis   average   english subject shorter english object   involves dependent variable   length   independent variable   gramrelation   subject vs   object    sake of argument   let imagine suspect length of constituent vary function of subject object   term of occur main clause subordinate clause   technically speaking   introducing second independent variable   clausetype   level   main clause subordinate clause   let assume pilot study   hypothesis   look      subject object   corpus   shown table count of      case length of subject object syllable compute mean length condition   subject main clause   object main clause   subject subordinate clause   object subordinate clause   let assume main effect find   main effect effect of variable isolation     constituent subject shorter constituent object     constituent main clause shorter subordinate clause   possibility result look like     depending want look      independent variable work additively   means simultaneous combination of level of independent variable effect expect basis of individual effect   case   expect    shortest constituent subject main clause longest constituent object subordinate clause     length difference main subordinate clause subject length difference main subordinate clause object      length difference main clause subject object length difference subordinate clause subject object   perfectly additive result represented called interaction plot figure kind of interaction   represented figure interaction line interaction plot intersect   slope of black line steeper of gray line   differently   difference mean of subject object main clause think break syllable   syllable subordinate clause   of unexpected element   interaction   interaction important concept   consider investigate design multiple independent variable   careful formulate hypothesis   interested interaction main effect   evaluate interpret datum   final aspect noteworthy   obviously   formulate hypothesis   decision   variable include   variable level include   kind of relation variable consider   additive vs   interaction      important guideline formulating hypothesis adhere called occam razor   occam razor   named william of ockham               following latin principle   entia non sunt multiplicanda praeter necessitatem   means   entity multiplied necessity     generally boils   try formulate simplest explanation model possible    use model way defined    invoke variable needed   explain of variability of dependent variable model different number of independent variable   choose model smaller number of independent variable     invoke variable level necessary   explain of variability of dependent variable model different number of level of independent variable   choose model smaller number of level of independent variable     explain     percent of variation datum variable distinguishes level of animacy   animate vs   inanimate    prefer variable distinguishes level      human vs   animate vs   inanimate   explains     percent of variation datum     choose additive relationship relationship involving interaction   explain     percent of variation of dependent variable model interaction   prefer model involves interaction explains     percent of variation   motivation principle of course simplicity   simpler model easier explain test     approach allows reject unprincipled inclusion of variable variable level explain sufficiently substantial share of datum     bear principle mind formulate hypothesis   datum analysis formulated hypothesis     begin analysis of datum    word   problematic collect datum   pour hour search of pattern interesting   pattern   declare hypothesis     tadaah    pattern proceed statistical testing      analysis begin writing script retrieve corpus datum   best way of handling datum store datum data frame edit r   conveniently   spreadsheet software libreoffice calc   crucial aspect handling of datum   emphasize     row represents analyzed case observation of dependent variable   second   column represents datum question       part of   concordance line investigated   variable respect datum coded     column gets counter    n restore data frame particular   original    order   row contain name of column   e    variable    fourth   missing datum point entered na   cell    corpus study   useful column variable   source of datum    contain information corpus file line of file match obtained    let assume investigated alternative hypothesis subject longer object   operationalizing length   length word       think break   independent variable   dependent variable   independent variable categorical variable gramrelation   level subject object   dependent variable numeric variable length   formulated hypothesis   h    h    text statistical form   decided analyze   ridiculously small   sample    data frame table think break table precise variant additional column listing subject object coded row   e    listing younger bachelor row     data point   subject object   gets row turn described term of variable level rightmost column   virtually store datum   ideally   save datum text processing r format looks like of table hypothesis   significance   testing created data frame table little confusing suddenly probability   says likely result h    true   typically set        probability p probability exceeded accept h      called significance level threshold value defined analysis   probability p obtained result h    true probability err accepting h      called probability of error p value   p computed basis of datum   e    computed analysis   wonder probability computed   question concerned book   locking door   subject      locking door   oobject      quick brown fox hit lazy dog   subject      quick brown fox hit lazy dog   object    think break approximation   work datum meet certain distributional criterion   non parametrically     basis of counting frequency of different outcome of possible outcome   remainder of chapter   use r function of computation   groundwork laid   look statistical technique allow compute p value determine allowed reject h        accept h      of test   look relevant assumption   unfortunately   consideration of space allow discuss of elementary monofactorial statistical technique skip treatment of technique useful   multifactorial statistic ultimately requires   graphical representation exploration of distributional datum facilitates understanding of statistical result   briefly simple graph produced     consideration of space allow detailed exposition book   study code file   provide lot of information   review documentation of graphic function mention   refer documentation par   categorical dependent variable of frequent corpus linguistic scenario involves categorical dependent variable sense records frequency of mutually exclusive outcome category   distinguish case   records frequency of dependent variable additional information   independent variable observed time   include categorical independent variable   independent variable let look syntactic example   word order alternation of english verbparticle construction exemplified             brought book   verb particle directobject b   brought book   verb directobject particle thing   interested finding semantically similar construction equally frequently   end   decide look corpus datum construction   of analysis consists of formulating hypothesis tested   case   fairly simple   h    usually states datum systematically distributed   unsystematic distribution random   sentence randomly distributed construction category   construction equally frequent   like tossing coin long run yield nearly identical frequency of head tail     gries       look distribution of datum   simple way of representing distribution graphically use bar plot   question arises of course result expect chance result unlikely arisen chance     probably reflects regularity uncovered   actual computation of test case simple   discussion useful briefly comment underlying logic   test investigate observed frequency distribution deviates expected basis of chance called chi squared test goodness of fit   tests good fit of observed datum expected distribution    case   h    states frequency   category   expected frequency of construction overall number of sentence divided   table like statistical test     determine test want use fact   chi squared test applied     observation independent of   e    value of data point influence of       expected frequency larger equal       condition obviously met   assume data point independent constructional choice corpus example independent of constructional choice sample   note assumption correct       speaker contributes multiple datum point   means data point contributes affected speaker idiosyncratic behavior   need carefully defended case   actual computation of chi squared value summarized equation                observed value of cell table   subtract expected value cell   square obtained difference   divide expected value cell   sum value   code file quick manual computation of value    of summand referred contribution chi squared     test r   extremely simple   r knows observed datum look like   vector grie         immediately use function chisq test compute chi squared value p value time providing chisq test argument   vector observed datum   vector probability resulting h     e    time       according h    equally likely construction    correct true correct false   size of datum set n small        n         recommended perform called continuity correction   calling correct true perform correction   immediately assign result of test object g       test check structure   result unambiguous   p value larger usual threshold value of       conclude frequency of construction gries sample differ random distribution   way of summarizing result gries datum assumed come population construction equally frequent   wonder df value means   abbreviation   df   stands   degree of freedom   number of value entered analysis   case   number of statistical parameter estimated data   case    customary provide df value report summary statistic   exemplify test discussed   reason of space   discuss notion of df detail refer fledged introduction statistic instead      structure output   chisq test computes expected frequency variety of result   stored list   interested expected frequency   need of result   list interested   usual statistical lingo summarize result like    verb particle construction particle directly follows verb occurs      time expected         exercise box       unidimensional frequency distribution    recommendation study exploration    way test observed frequency differs expected percentage    prop test     independent categorical variable probably frequent research scenario dependent categorical variable     records frequency of dependent variable of independent categorical variable suspect correlated dependent   fortunately   required method similar of previous section   called chi squared test independence requirement chi squared test previous section   explore test works additional variable added   let revisit example of   formulate hypothesis   seen previous section chi squared statistic computed   absolute difference observed expected value numerator of       immediately add statistical hypothesis   h      frequency of construction   v vs   v   dependent variable   vary depending referent of direct object abstract concrete   independent variable    chi squared       h      frequency of construction   v vs   v   dependent variable   vary depending referent of direct object abstract concrete   independent variable    chi squared       read datum    qclwr    inputfile stat vpc csv   r   know column name     tabulate   usual   named variable goes row   use generic plot command called mosaic plot of table of variable   use table        transpose table plot row column arrangement table     kind of plot   frequency of level of concreteness reflected width of bar   frequency of construction level of note compute expected frequency of cell of table of observed frequency multiplying row total of row of cell column total of column of cell dividing overall total of table   shown left cell   result variable concreteness highly significantly correlated choice of construction     thing know   strong effect   important note use chi squared value measure of effect size   e    indication of strong correlation investigated variable   fact chisquared value dependent effect size   sample size   test r easily   obvious   sample increased order of magnitude   chi squared value   of course disadvantage   sample size of increased table time large   relation of value table of course changed   obtain measure of effect size influenced sample size   transform chi squared value measure of correlation   formula measure     read   phi   k             table   k number of row column respectively   cramer v   k    table k          theoretically extreme value of correlation coefficient     correlation       perfect correlation    r   computation easy step   expository reason break smaller step     correlation particularly strong highly significant   come result interpreted   simple case   mosaic plot gave away   table row column   interpreting result plot difficult     straightforward way answer question involves inspecting      called pearson residual      association plot   pearson residual indicate degree observed expected frequency differ   deviate     observed frequency deviate expected one   residual of cell obs exp    sqrt exp     square mentioned contribution chi squared   sum turn corresponds overall chi squared value   generated like expected frequency   calling result of chi squared test   time requesting of output normally provided   table interpreted follows   positive value mark observed frequency larger expected negative value mark observed frequency smaller expected   know value deviate     stronger effect     strongest effect datum strong preference of abstract object occur v   second strongest effect dispreference of abstract object occur v     case   residual similarly high   table   distinguish cell matter    visual approach issue involves called association plot   figure representation   black gray box represent table cell observed frequency greater smaller expected one respectively   e    corresponds positive negative pearson residual    area of box proportional difference observed expected frequency   way read   assocplot      sum   datum evaluation summarized follows    according chi squared test independence   statistically highly significant albeit moderate correlation choice of verb particle construction abstractness   concreteness                df       p                      significant result fact construction particle follows verb directly preferred abstract object construction particle follows direct object preferred concrete object    let briefly mention important area of application of chi squared test related statistic   measure of collocational strength   collocational statistic quantify strength of association repulsion node word collocate   node word tend attract word   word occur close node word greater chance probability   repel   word occur close node word chance probability   occur chance level frequency   let look example chapter   collocation of alphabetical order   bnc              numbered sentence   occurrence of    n                 sentence   distribution highly significant observed co occurrence of alphabetical order       larger expected         check example   test expected    issue mentioned       chi squared test actually best test applied given small expected co occurrence frequency   smaller   matter of fact   huge number of statistic quantify reliability strength of co occurrence relationship     word     exercise box       dimensional frequency distribution    numeric dependent variable frequent kind of scenario involves numeric dependent variable   section        briefly review useful descriptive statistic dependent variable   discuss significance test scenario   cf   gries       discussion worked example    section               distinguish case   level categorical independent variable numeric independent variable   independent variable   let briefly review useful descriptive statistic summarize numeric datum   usually   distinguishes measure of central tendency   probably know average   measure of dispersion   measure of central tendency serve summarize central tendency of numeric variable single statistic   widely known measure of central tendency mean   compute mean summing observation case dividing sum number of observation   r use mean   takes argument vector of value   despite apparent simplicity   important thing bear mind     mean extremely sensitive outlier   single high low value influence mean strongly stops useful statistic   example   mean value of           represents sixth value particularly   case   better trim datum of extreme   mean argument trim   choose median sensitive measure of central tendency   sort value ascending order   median middle value   mean of middle value      median of vector     represents distribution of value     look distribution extreme example datum better conceived of ordinal   e    rank datum    use median   mean   second important thing bear mind        report measure of central tendency measure of dispersion measure of dispersion   e    variability of datum central tendency   know measure of central tendency fact summarize of datum   obviously   case of extreme distribution report mean         reporting huge dispersion of distribution   providing informative     let look contrived example comparing city   average temperature year     city    c mean   city similar climate   difference mean small     look datum detail   especially graphically figure obviously   mean of city   summarizes central tendency city   better mean of city   city   exhibits greater degree of dispersion of datum year   measure of dispersion quantify summarize statistic   widely dispersion measure numeric datum called standard deviation   computed represented        sd         measure of dispersion city   derivative   considerably higher of city    expected   given similarity of mean   way of summarizing dispersion of numeric variable measure helps case datum decidedly non normal   e    likely bell shaped   outlier     like median replace mean measure of central tendency case    measure of dispersion ordinal variable called interquartile range   iqr    gives length of interval median includes half of datum     conclusion   city   heterogeneous city    recommendation study exploration    quartile decile numeric vector   quantile             quantile       range of vector   e    shortcut max city   min city       range       median absolute deviation   robust measure of dispersion    mad     good way look datum boxplot   graph provides lot of information distribution of vector   panel of figure plot tells central tendency of city bold horizontal line represent median of distribution   second   tells dispersion horizontal line delimiting box extend upper lower hinge   roughly   data point delimiting highest     percent lowest     percent of datum      whisker   dashed vertical line horizontal limit   extend extreme data point      time interquartile range box   default value of      changed   enter   boxplot    r prompt    fourth   outlier whisker represented small circle   finally   notch extend        iqr sqrt n    enter   boxplot stat    r prompt information hinge whisker    notch of boxplot overlap   strong prima facie evidence median significantly different   of course test properly    function grid    draws dashed gray line grid coordinate system   apply example   of observed far separately glance   central tendency of city similar   medians close notch overlap    city exhibits heterogeneous value second city   box whisker of city cover larger range of axis     notch of city   huge    note finally difference of box plot   poses problem   difficult understand horizontal line   speak   folds   downwards   r way of giving correct end of box extension of notch   case   upper end of box far notch   line notch extends higher upper limit of box   lower panel of figure point indicates percent of datum of city   axis   covered corresponding temperature x axis smaller one     estimate plot     percent of temperature value of city            percent of temperature value of city          plot informative boxplot bin datum point   box covering middle     percent of datum      unique observed data point   temperature   represented point     fact temperature of city   variable revealed fact gray curve city   covers smaller range of x axis limit black curve city    recommendation study exploration independent categorical variable frequent scenario involves situation numeric dependent variable categorical independent variable   detailed discussion restricted case independent categorical variable level   example scenario   return example discussed   different length of subject   direct   object   let formulate hypothesis   assuming operationalize length number of syllable   h      average   english subject long english direct object   mean length of english subject    mean length of english direct object   h      average   english subject long english direct object   mean length of english subject    mean length of english direct object    fact hypothesize subject of different length   differ object   shorter   referent of subject assumed given accessible information   given accessible information usually encoded linguistic material new er   information   interest of keeping matter simple   stick h      postulates difference length   direction of difference    let assume investigated randomly drawn subject direct object corpus      instance of stored data frame conforms specification section       look datum graphically boxplot   mentioned   of boxplot   provide function vector argument   city   like   data frame looks told   r offers possibility use formula notation dependent variable followed tilde      independent variable   immediately add ecdf plot object subject   practice   generate histogram datum      median of object slightly larger of subject   immediately lot of variability ecdf curve similar    given nature of datum   logged axis boxplot graph easier grasp     code file generate histogram of object subject length    let compute mean standard deviation median interquartile range   usual test case   dependent numeric variable independent categorical variable   called test independent sample   independent categorical variable level     way anova   independent categorical variable level    use way anova binary independent variable   result identical of test   step consists of determining fact allowed perform test   test independent sample parametric test     observation of sample independent of meaningful relation     pair of data point     population sample drawn normally distributed   especially sample size smaller          variance of sample homogeneous   assumption   subject object randomly drawn corpus relation data point   assumption   figure   compute non parametric alternative test way anova   u test   independent categorical variable level     kruskal wallis test   independent categorical variable level    function u test called wilcox test   function kruskal wallis test kruskal test   accept formula notation seen   note   independent variable level   p value of test virtually completely identical test   independent variable level   use kruskal test     p value smaller        conclude difference median length likely chance     result summarized follows    median length of direct object syllable   interquartile range     median length of subject syllable   interquartile range      datum violated assumption of normality   u test kruskal wallis test computed   showed difference length highly significant   u test   w            p            population of english sample representative   direct object longer subject      exercise box       average    independent numeric variable final statistical method look dependent independent variable numeric   example   let assume interested length of xps   let assume generally believe best way of operationalizing length of element counting number of syllable     facing data set large think time count number of syllable   require lot of manual counting   kind of question addressed linear correlational measure   linear correlation coefficient r       usually range            negative value indicate negative correlation paraphrased sentence of form                                            value near    indicate lack of correlation variable     positive value indicate positive correlation paraphrased sentence of form                                          absolute size of correlation coefficient     indicates strength of correlation   hypothesis follows   h      length syllable correlate length word   r           h      length syllable correlate positively length word word xp   syllable   r           let load datum file    qclwr    inputfiles stat length csv   r   usual   begin inspecting datum visually   conveniently   use generic plot function produce simple scatterplot panel of figure   plot panel of figure plot      uses rgb function create transparent grayscale color   overplotting leading darker color        adds thicker   smoother   lowess   line   line   summarizes trend datum        adds main diagonal marking case word length syllabic length   abline intercept slope set value   line representing situation    x   immediately obvious positive correlation variable   larger syllabic length   larger lexical length   correlation numeric variable referred pearson product moment correlation r   regression    significance test     comes assumption corpus datum usually meet   population sample taken bivariately normally distributed   practice approximated testing variable distributed normally   figure turns correlation high highly significant want confident length syllable reasonably approximated length word computationally easier obtain      definition of word differ software application     order able understand replicate result   outline approach precisely possible   of course   use r   of problematic provide regular expression   complete program pseudocode   pseudocode kind of structured english allows describe program script pay attention detail of programming language syntax   useful page john dalbey www csc calpoly edu   jdalbey swe pdl std html detail    chapter    use of similar pseudocode time   example of pseudocode script generates concordance of right tagged adjective      clear memory     choose corpus file searched     corpus file     load file     corpus file right register     downsize file line sentence number     retrieve match   e    line containing right adjective   file     store match name of file successively     end     end     insert tab stops better output     delete unwanted tag unnecessary space     output result file provide information actual regular expression    check right register line       teiheader type   conv   classcode        downsize file line       n        retrieve match line       w aj    av     right   b       delete unwanted tag unnecessary space line                         explicit corpus linguist present   occasion past   point covered nearly programming knowledge need   finally business deal case study   note    actually true of corpus frequency   content reporting frequency of occurrence co occurrence   reporting measure of corpus dispersion   hide considerable bias datum   r corpus linguistics case study corpus linguistics turning integral of mainstream linguistics         face challenge of complementing amazing effort compilation   annotation analysis of corpora powerful statistical toolkit of making intelligent use of quantitative method available       script involve of aspect   cover of thing hope generalize application   group task case study ordered according difficulty       approximate difficulty hard operationalize objectively   sense   arrived   good news   bad news   kind of situation   good news actually know nearly function use   learn small number of new function chapter fact know virtually function use research   bad news easy chapter putting function right way stuff   sense   r like natural language   easy learn vocabulary local syntax   function argument    easy employ properly sentence paragraph   script    fear   chapter written way hope useful way easy recycle   part of   script work   possible wrote code hardcode particular number of file    script r determine length of vector list   fiddle detail recycle script work    exception   section structure   begin short characterization of goal of task script     prose explanation   result of scripta result table plot       section   designed help understand programming process stepwise fashion   sequence important easy solution programming problem   hard teach solution good harder teach develop way of thinking enables find solution   programming requires analytical extent taxonomic modular kind of thinking   context   small half humorous remark order   thing right drop human way of thinking human expectation   important aspect of writing script understand   thing   implementing instruction   stupid computer    e    entity cover gap script intentioned base understanding of word   word interested       try write script eventuality covered   means think corpus file contains match of expression   script needs able handle case corpus file contain match   means think certain website downloadable   script needs able handle situation     sequencing of section   sequencing designed help zoom general description of task specific aspect of code      thing need   section explains plain english step relevant task involves   uses hardly r code introduces kind name of data structure script contain     function need   section lists main function need use perform thing implied description formulated previous step       overall structure of script   section provides skeleton of r code use called pseudocode   description of algorithm structure of program performs particular task   imperative read relevant script open rstudio pseudocode provide line number of relevant r script companion website exactly line of code script of pseudocode   pseudocode   translated   actual r code   file script folder    qclwr    script    begin         greatly help understand logic of script     aspect of script worth additional comment   look script file   heavily commented   single function broken line argument explained   break regular expression multiple line   remember freespacing    explain detail     script involve think merits additional explanation   involve seen form   situation   part   section provides additional discussion of aspect of script   note script provide solution problem   note script provide alternative solution   usually way solve problem   solution provide probably relatively good one   probably better one     thinking task reading solution come better   great   post newsgroup google group book   ok   let started   dispersion dispersion     hiv   keeper   lively bnc mentioned section       extremely important consider frequency of morpheme   word   construction     corpus   dispersion   element similar overall frequency corpus differently dispersed corpus     mentioned          little example of corpus file   file     percent      percent       percent of corpus   of occurrence of word question      percent      percent     percent corresponding file     dp computed like   simplifying bit   dp ranges     word perfectly evenly distributed corpus   e    accordance size of corpus file       word completely unevenly distributed corpus    want compute dp word w   need determine      frequency of w single corpus file      higher      thing need     need define vector corpus file contains path corpus file   directory   potentially sub directory      need define vector word contains word want compute dp value vector search expression changes word regular expression search corpus file   annotation of corpus    recall section         script know dimension of output advance   word        corpus file   know     vector corresponding size of file word need        slot   know list collects word   frequency need component        slot     define data structure dimension enter of loop     access of file   e    use loop   counter   iteration load   scan   corpus file   file memory   need determine size word   save slot size   of file word       corpus file memory   need second loop   j counter   iterates search expression determine frequent word w word corpus file c    n    frequency of word w j corpus file c    store frequency corresponding slot of freq   of word   j         complete inner loop word outer loop corpus file   order load corpus file look word loading corpus file time     finally   result of loop   compute dp word line discussed generate plot     frequency of word x axis dp value of word axis   function need   obviously   need able define corpus file want search   means useful use rchoose dir define directory containing corpus file     need able retrieve file name directory dir   need define vector list   integer list    need use loop nested   use scan load corpus file outer loop   use tolower case insensitive   use grep search word of corpus file header   find word interested   use match   define beginning of script   exact match     source beginning of script    loop   need compute file size percent   means need sum compute overall corpus size size of file word compute file size fraction of   need lapply access element of freq of word     loop word w      compute dp defined   overall structure of script    qclwr    script        dispersion   r    read actual script rstudio   clear memory define load relevant package function thing useful talk creation of data structure collect result   creating size of file word easy   following line      script   creates integer vector slot corpus file     size of file word   integer length length corpus file      creating list collect word   frequency corpus file involved   proceed step     create temporary vector slot corpus file slot of corpus file   need list element word compute dp     create list component   line       list element of word computing dp   line       use subsetting function      temp list element   remember freqs of word element list   use lapply access element of list apply anonymous inline function takes list element   know numeric vector   temporarily refers x   divides number of vector x   e    frequency of word corpus file   sum of number x   e    overall frequency of word corpus    way   vector beginning of section exemplified size   of file word freq of word   means use small loop compute dp word plot result   dispersion     perl wikipedia entry let consider application of dispersion   time want visualize dispersion of string   perl    case insensitively   older version of wikipedia entry   cleaned available    qclwr    inputfiles corp perl txt     specifically want create result shown figure left panel dispersion plot x axis represents word   corpus   shows vertical line word   perl    case insensitively   line   easily     lot of occurrence end   presumably section reference link   right panel similar plot bins word corpus   equally large part    lot of occurrence of   perl       percent slice of corpus   thing need     need load switch lower case single corpus file split word     character vector word token    rid of character string resulting splitting     need check word token word token   perl       left panel   plot vertical line word token   perl      right panel   need create vector corpus part lists element of vector word token of equally sized part count   perl   shows of part   compute dp       observed percentage of   perl   shows of part   generate bar plot represents percentage   function need   need scan tolower load prepare corpus file   need strsplit retrieve word token unlist turn list returned strsplit vector word token   discard character string nzchar test word token   perl   simple logical expression testing equality   e        use plot   type   h    histogram   plot left panel   false      true        right panel   define number of corpus part want     script easily changed accommodate different division of corpus part     create vector of word position word token   run     word word token   n           word word token   seq split vector equally long part cut   factor cut returns level cross tabulated   table   true false logical vector created plot left panel   final step computing dp plotting bar plot     table contains frequency of   perl   corpus   column true    divide overall frequency of   perl   file percentage   stored vector called obs percs    use function rowsum compute corpus size percentage vector exp perc   close     percent   given split corpus part    compute dp   finally   use function barplot plot observed percentage of   perl   corpus part customize plot   recall section         create vector   gram   of length collect result     long character string input file loop extract character gram   storing of   gram      finally   create sorted frequency list of character gram   explore briefly statistically   plot   guess frequent gram     present version of script use loop function family of apply function     mapply      use kind of code write apply function called character ngrams future work   function need   need scan tolower load prepare corpus file   need gsub clean character want consider   need paste gsub create clean version of character vector element contains text   need nchar determine gram create retrieve store   loop applies substr cleaned text vector extract threegram   finally   use sort table create frequency list of gram   quantile explore distribution   plot type   h   visualize result     overall structure of script    qclwr    scripts        char ngrams r    read actual script rstudio   clear memory   short version of   alternative solution require loop   shown line        bit tricky involves function discussed   recommended exploration   mapply   help says   multivariate version of sapply takes argument function additional argument argument named function   following line   means   use function substr textfile oneline    substr argument   e    thing extract substring    position                             second argument substr   e    starting point of substring extract    position                               argument substr   e    end point of substring extract    allow mapply output element   makes output extremely unwieldy   alternative create character gram avoiding loop shown line         involves substr   rep argumentthe string extract substring   long argument start stop   explore rest of code file   line          second approach   mapply   define function character ngram   user provides character vector of length    argument desired gram length second job quickly     homework assignment   want think create version of character ngrams works input vector of length    longer one     check   stringdist   qgrams     r notation   help file function qqgrams package stringdist    word n gram similar preceding   interested n gramsthree gram   precise   time gram of word   character   sake of simplicity   work input file     qclwr    inputfiles corp gpl   long txt    thing need     need load switch lower case single input file     retrieve word of file splitting letter z space       cw ould need tweaked kind of input file      determine word gram   avoid vector of gram grow time     create vector   gram   of length collect result     vector of word input file loop extract word gram   storing of   gram      finally   create sorted frequency list of word gram   explore briefly statistically   plot     present version of script use loop   mapply   use kind of code write apply function called word ngrams future work   function need   need scan tolower load prepare corpus file   need strsplit unlist split corpus file word   nzchar eliminate string   vector called textfile word   need length determine gram create retrieve store   loop applies paste   collapse   text vector create gram   finally   use sort table create frequency list of gram   quantile explore distribution   plot type   h   visualize result     overall structure of script    qclwr    script        word ngram r    read actual script rstudio   clear memory      load corpus file vector textfile switch lower case        use strsplit split occurrence of     character want   continued   determine word textfile word length   number minus            generating gram   number of threegram   reserve vector   gram   slot           use loop retrieve gram textfile word store relevant slot of   gram           create sorted frequency list of   gram    sorted ngram   aspect of script worth additional comment     dealt pretty of previous section character n gram     look line        of code file   alternative way of generating word gram loop   time solution complicated involves nested step     mapply   time generate matrix        column   gram create   row   position of word gram subsetting   column of matrix     use function apply   takes argument     dimensional data structure matrix   second         depending want row    function pass apply application of paste collapse       want vector of number column subsetting textfile word paste word space   pretty complicated application matter fully understand right away   of apply function difficult   revisit practice     note line        provide function word ngram uses apply mapply        approach use need create n gram character vector element of word    continued   case study      zero derivation of run walk bnc example look word form run   run   walk   walk bnc   specifically   explore lemma differ regard frequently noun verb   bnc   add slight twist thing   write script prompts user interactively choose annotation file search   xml sgml    proceeds required search expression           w c    nn    hw   walk   pos   subst   walk desired output of script         run walk r   data frame result like   shown xml result    lists occurrence of run   run   walk   walk     coarse grained tag   pos value xml annotation letter of tag sgml annotation   fine grained tag   c   tag xml annotation tag sgml annotation      form found lemma of form found   thing need     need define vector corpus file contains path corpus file   directory   potentially sub directory      let user choice of kind of corpus annotation script deal   depending user chooses   script define search expression accordingly     script generates vector collect search result verb     load corpus file use search expression find form question right tag store match     process match retrieve coarse grained fine grained tag lemma of match save of result datum frame result     finally   split data frame lemma determine   lemma   significant correlation form noun verb   perform chi squared test create plot   function need   obviously   need able define corpus file want search   means use rchoose dir define directory containing corpus file dir retrieve file name directory   need function switch menu   know want briefly look help page   difficult script   prompt user choose annotation format processed   need conditional define regular expression choice   need define character vector collect result character   need use loop load corpus file   iteration   use grep find corpus sentence use exact match    find match of run   runs   walk   walk   loop   use exact match    retrieve tag match   use gsub retrieve form   e    discard annotation    use substr define lemma of match   retrieving letter   gives information distinguish run walk   ifelse define lemma column    result datum frame result datum   frame     data frame split split cleaned droplevels   use chisq test   mosaicplot   assocplot explore distribution of noun verb inflectional form of lemma   process   introduce function     overall structure of script    qclwr    script        run walk r    read actual script rstudio   clear memory define load relevant package function define search expression conditional annotation processed   search expression cover retrieval of overall form tag   retrieve tag   form          define character vector collect match   run walk          loop   counter      corpus file              output progress report   of file currently processed       load corpus file       discard header find sentence switch lower case          find store run match run run tagged verb noun          find store walk match walk walk tagged verb noun          retrieve run walk coarse grained tag exact match            retrieve run walk fine grained tag exact match            retrieve run walk form gsubbing away aspect of script worth additional comment   maybe useful briefly comment user prompted choose annotation format   function menu takes argument character vector of option choose customized graphic   want window pop prompt console    title   returns number of option user chose   e    case        code         input switch   takes number picks corresponding item argument     user chose   xml   menu    switch assigns true xml version   second aspect worth mentioning definition of search expression   example   looks beginning of xml tag   c   tag beginning   v     n    followed character closing angular bracket of tag till reach closing angular bracket   followed   run     run     looking right   space   optional   opening angular bracket   okay   backslashe   understand   useful compare difference r represents string vector console actually printed string     line defined   r   speak    uses   backslash makes r recognize       closes opening    of search expression   backslash marks second actual backslash   backslash of special character   little confusing   struggle   admittedly time   helps cat expression screen defined   finally   brief note function following line   purpose of r know object argument of table    tried retrieve tagscoarse   error message     recall section        tells r tagscourse form found   datum frame result   rest of script self explanatory   final task   try main search expression   one loop line          devise new finds form time   solution little exercise code file free spacing line             think   later   script changed avoid growing result vector loop   word sentence length bnc small    file bnc determine sentence long   word   long word   character   generate plot checks correlation   thing need     need define vector corpus file contains path corpus file   directory   potentially sub directory      need generate list store file    determine sentence length   count word tag find sentence   save sentence length file relevant element of sent length file     determine word length   use word tag find word   delete tag count number of character of left   save word length file relevant element of word length file     loop   compute median sentence word length file   crude approach    summarize distribution of median     finally   generate scatterplot word length x axis   logged   sentence length axis try determine correlation   function need   usual   use rchoose dir define directory containing corpus file dir retrieve file name directory   define list element file function vector mode   list    use usual loop load corpus file iteration use grep find corpus sentence   use exact match    find word tag retain second component of exact match     location of match   e    number of sentence occur   tabulate table       use exact match    find word tag gsub delete tag nchar determine number of character of left   end of iteration of loop   save sentence length of file word length of file relevant component of sent length word length   loop   use sapply median summary compute median sentence length median word length file use plot create scatterplot defined   avoid overplotting of point coordinate   use jitter rgb   grayscale transparency effect   section        discussed correlation log log sentence length   finally   use abline text add annotation plot   use line lowess        add trendline   introduce mtext add colored axis label     overall structure of script    qclwr    script        wrd sentlength r    read actual script rstudio   clear memory define load relevant package function loop   counter      seq corpus file     find number of word tag sentence store sent   length               find length of word   identified tag           tag deleted gsub   store word length aspect of script worth additional comment   script particularly complicated component   thing recommend study code plot commentary great detail involves useful function   approximating syntactic complexity   fichtner c context of applied linguistics study   want compute file bnc world edition measure of syntactic complexity   particularly easy compute uses information collect   fichtner c   computed shown        fichtner numberof verb numberof sentence thing need     need define vector corpus file contains path corpus file   directory   potentially sub directory      usual   need rchoose dir dir     need generate vector store file      number of verb       number of word        number of sentence     of vector needs element file corpus file   let vector no of verb   no of word   no of sentence     load corpus file   discard header sentence     determine number of sentence   determine length of vector remaining previous step   precisely aiming keeping sentence   save number of sentence relevant element of no of sentence     determine number of word   count closing word tag      w     find sentence   save number relevant element of no   of word     determine number of verb   count instance of pos tag   verb   find sentence   save number of verb relevant element of no of verb     loop   compute fichtner c value file defined        housekeeping   value name of corpus file     compile result data frame result looks like     finally   explore datum visually    function need   obviously   need rchoose dir define directory containing corpus file dir retrieve file name directory   need define vector collect numeric result integer   need use loop load corpus file   iteration   use grep find corpus sentence   use length find number of sentence   use length applied search closing word tag verb tag exact match     find number of word verb   loop   use simple arithmetic compute fichtner c value datum frame compile result datum frame   use par mfrow c row   column    define number of row column want plotting window use apply     hist   log   create histogram of datum column of result   finally   use alternative par   layout   divide plotting window region plot scatterplot plot   log   line lowess         abline   correlation test strongly fichtner c related number of verb sentence number of word   sentence     overall structure of script    qclwr    script       fichtners c r    read actual script rstudio   clear memory define load relevant package function loop   counter      seq corpus file     find number of sentence store no of sentence        find number of closing word tag store no of word           find number of verb tag store no of verb           compute fichtner c file          compile result data frame           summarize column        save result       set plotting window row column   line      use apply plot histogram of raw logged value of variable fichtner c   add argument break   fd   hist fine grained bin histrogram   line          reset plotting window default   line       learn layout function defines panel plotting window    set plotting window plot   line      plot scatterplot of fichtner c variable isolation aspect of script worth additional comment   script particularly complicated component let recommend study code plot detail       apply   hist   column of result   check section                layout works   takes input matrix numbering shows different plot   equal number    cover space panel     reserve space r plot   probably noticed   second script file fichtner c      qclwr    script       b fichtners c xml r    script exact thing discussed of code fact identical   essentially treating corpus file simple flat sequence of character string   utilizing hierarchical xml annotation way discussed section           of thing discussed change   change occur loop   remember powerful package handle xml datum r xml   remember bad memory leak windows system   script following loop   checks currently running windows computer   line                   script detects running windows computer   uses function xml   package job   loads corpus file read xml retrieves frequency of element xml find   line            script detects running windows computer   uses function xml package   loads corpus file xmlinternaltreeparse retrieves frequency of element summary of parsed xml object xpathapply xmlgetattr   line           continued     check query r instance regard system running   line        importantly   use of xml processing package job   key word section   discuss script computes different measure of keyness word occurring target corpus comparing frequency target corpus of reference corpus quantifying relative attraction of word target corpus mean of keyness statistic   frequently keyness statistic based        occurrence table shown table widely statistic log likelihood ratio g     finally   use damerau relative frequency ratio rfr visualize result scatterplot simply            rug     nicely           aspect of script worth additional comment   aspect of script straightforward   given happening loop relatively simple text datum processing   experience   difficult generation of observed frequency subsequent computation   appreciate r uses vector long     of frequency of   perl   corpora   number know table frequency of   ic   ical adjective    studying english adjective ending   ic   ical basis of stored frequency list of bnc version     frequency list compiled adam kilgarriff provided file    qclwr    inputfiles corp bnc sgml freql   txt    looks like   specifically   want thing     want generate table states adjective attested   ic      public     ical      physical    of course suffix      electric al     attested suffix   absolute relative frequency   supposed look like   second   want explore correlation overall frequency of adjective stem   suffix   percentage of adjective ending   ical   case   ical adjective frequent   claimed marchand              thing need     load bnc frequency list file data frame called freqs     deal large date structure time   nearly          row    extract data frame   row contain adjective ending   ic    freqs ic adj    row contain adjective ending   ical    freqs ical adj    note interested memoryefficient   trim of freqs data frame contains adjective   freqs adj    remove freqs memory look   ic   ical adjective   freqs adj     noting adjective represented file tag   remember existence of portmanteau tag   check physical     sum frequency of tag adjective data frame   separate vector frequency suffix   let ic adjective freq ical adjective freq   mild amusement   check freqs ical adj spelling mistake     different spelling of hierarchical attested file        need   speak   join vector adjective stem occurs   ic   ical   end   apply logic of comparing frequency list   exercise box vector   previous      create vector   ic adjective token   called ic adjective     ical adjective token   called ical adjective    second   create vector suffix lists   ic     ical     ic   ical adjective   know length of ic adjective ical adjective respectively      combine ic adjective version of ical adjective deleted   al   vector called adjective   result   vector   ic token   adjective    says suffix token attested originally   suffix    tabulate raw frequency percentage     finally   plot row sum of frequency table result   overall frequency of adjective stem   second column of result perc   relative frequency of   ical form   correlation   explore   ic adjective differ frequency of   ical adjective   let recommend datum adjective occur certain minimum frequency      amazed difference result   function need   need read table rchoose file load frequency list file   need grepl   subsetting   droplevel extract sub data frame   ic   ical adjective   droplevel important   makes sure adjective   ic   ical adjective   stick   factor level frequency table     need tapply sum merge frequency of adjective attested tag   use rep c merge vector gsub reduce   ical adjective   ic form   finally   need table compute raw adjective frequency   prop table change table of percentage   order order row of table combined adjective stem frequency   statistical visual exploration of correlation stem frequency percentage of   ical   need plot   log   rowsum line lowess          exploration of potential difference   ic   ical adjective frequency   use boxplot wilcox test plot ecdf         create downsized version of frequency table   use apply min subsetting     overall structure of script    qclwr    script        ic ical r    read actual script rstudio   clear memory frequency of word tag combination bnc getting   script seemingly elementary   create frequency list of word tag combination   able distinguish run noun run verb    relatively large datum set   complete bnc world edition xml annotation   use annotation utilizing information provided bnc multi word tag   e    tag mark multi word unit of   spite of   behalf of       output want   crucially   means need careful count thing twice   subordinating conjunction   cj   counted   count adverb   av    subordinating conjunction againotherwise imply figure   create use function called whitespace   clean excess whitespace   leading trailing space   sequence of space   character string   finally   maybe biggest new thing   given size of datum r memory handling   likely able vector        million word multi word unit   tagsjust grow dynamically memory   computer session survive forever crash   of computer     gb of ram stopped script taking forever      create subdirectory save interim output corpus file   gone        corpus file merge       output file datum structure want   result df   thing need     set warning option problem indicated iteration arise   later end     option        define function whitespace   takes argument character vector   deletes leading trailing space   reduces sequence of     space     delete character string     define vector corpus file path        bnc corpus file     create directory         freqoutput   save        interim result     load file   switch lower case   corpus sentence       retrieve multi word unit looking thing beginning    mw    ending     mw       unit   retrieve c   attribute   splitting tag multi word unit   multi word unit   paste tag multi word unit   memory management reason   store instance frequency list of instance   finally   exiting conditional expression   delete multi word unit corpus sentence constituent word counted       use nearly approach retrieve tag word of   normal    meaning   word word    paste tabulate     merge result   normal   word multi word unit save directory interim result of current corpus file     loop   hurdle   likely growing        frequency table super long   normal computer      reserve memory space advance creating long vector   word tag combination   word tag   frequency     word tag freq           million element        million word corpus      use loop load of        interim frequency table word tag combination frequency relevant slot word tag word tag freq respectively   counter specifies position of new input inserting n element   n number of word tag combination current interim result file   like large number of small container of filling left right     step sum frequency belong word tag combination save output   csv file   rdata file   function need   piece of good news   term of function script requires   challenging   need function   conditional   gsub nchar define whitespace     usual rchoose dir dir   dir create create folder collect interim result file     usual loop load file scan sentence grep   use exact match    find potential multi word unit   use check   null   match multi word unit     use exact match    tag   use strsplit split tag   access resulting list element sapply use paste glue word   paste glue tag tabulate table     proceeding word   delete multi word unit sentence   use pretty logic extract element word paste tag tabulate   end of loop   use c combine multi word unit table element word table save result interim result folder   merge result   need create long character integer vector word tag word tag freq   define position counter   initially set     iteration   begin thing position of long vector    loop   load interim result add slot   indicated counter of long collector vector          frequency list file   use nzchar subsetting delete character string remain long collector vector use tapply sum frequency of word tag combination save result   csv file cat data frame   created strsplitting word tag     rdata file save     overall structure of script    qclwr    script        bncxml freqs r    read actual script rstudio   clear memory   load rchoicedialogs package   source function exact   match          set option warn   return warning immediately arise   later       continued   define function whitespace         define vector corpus file create directory interim result file     result   tapply word tag freq   word tag   sum     case   complex procedure like best understood applied small simulated case   repeating paraphrasing discussion section        simply experience challenging beginner    code file   find   beginning line         define frequency list freqs    freqs               simulate interim result file load sub directory           define collector vector lett coll freq coll      simulate loop             manually iteration of   line           datum freqs    inserted lett coll freq coll counter gets incremented   line           datum freqs    inserted lett coll freq coll counter gets incremented     remove unused slot lett coll freq coll manual execution of small example going simulated loop clarify way of making use of predefined result vector   generally good way understand complex part of script   encourage use run problem loop   recall end of section          additional practice assignment     try revise script uses corpus file   xml annotation   e    try use package xml xml    co occurrence datum   collocation colligation collostruction turning variety of case study involve exploration of co occurrence datum   collocation alphabetical order bnc begin simple example   want determine collocation strength of collocation alphabetical order bnc     simplistic way   count sentence alphabetical   order     sentence altogether   characterization maybe allows guess information   compile        table like table table   compute kind of association measure     simple   pointwise mutual information mi   computed shown    thing need     need define corpus file define search expression find alphabetical tagged adjective   aj    order tagged singular noun   nn     play fact bnc available xml sgml version     section         user state version   r load file discover pick right search expression   use fact sgml version closing word tag     create vector set      freq cell of function need   use rchoose dir dir nearly   use loop scan grep load file retain sentence   use   simple definition       let r check file xml sgml annotation   depending   search expression alph search expression ord defined required way   use length count number of sentence grep find search expression   length number of match    number of sentence search word obtain length intersect   result of grep    loop   create table reduction of verb    explore corpus datum way inspired datum   test hypothesis generate nice visualization   test second hypothesis use adam kilgarriff frequency list datum frame correlate percentage of reduction frequency of gerund bnc    continued   thing need     define function match whitespace define corpus file     defining collector vector   load corpus file loop   output progress report   immediately check corpus file contains spoken datum   immediately iterate load file     file contains spoken datum   discard sentence word tag     retrieve sequence of   bnc lemma annotation   followed gerund   bnc c   tag    note tagging error form of tagged lemma      extract form of gerund store separate vector   loop   result data frame row order row sum     cross tabulate gerund form of reduced raw frequency percentage of reduction        plot reduction percentage gerund frequency compute kendall tau       second exploration   load kilgarriff data frame   trim gerund   extract gerunds   overall corpus frequency generate analogous plot compute analogous kendall tau frequency     function need   defining match whitespace   of course use rchoose dir dir nearly   use loop scan load file grepl check corpus file contains spoken datum     use grep retain sentence gsub delete non word tag value   negative lookahead    retrieve sequence of plus gerund use match   extract form of following gerund match gsub   plus whitespace clean    loop   compile datum datum frame use table prop   table create reduction reduction perc order rowsum order row     use plot   text   abline   line lowess        scatterplot cor test correlation   second study   load datum frame read table   trim subsetting grepl   tapply sum sum frequency gerund   datum   create new plot new correlation test code     overall structure of script    qclwr    script        reduction r    read actual script rstudio   clear memory   load rchoicedialogs package   source exact match        line retrieves frequency gerund attested kilgarriff data frame subsetting of name   of course know of found   line       set frequency     later logging   name of frequency missing verb   verb collexeme beginning of section   section         dealt computing association measure collocation alphabetical order   mentioned   typically   compute association measure collocationrather   computes potentially collocation ranks strength of association     explore verb strongly attracted position modal verb folder k of bnc world edition   word   need table like table raises interesting question     know   kind of association measure computation requires know     admit occurs   need know occurs altogether      b    admit occurs altogether      c    corpus size      b    c       actually need potentially hundred thousand of verb type   determine frequency loop   imagine write loop looks modal verb extracts verb v    n determine verb   frequency   okay   admit attested file second   missed frequency of admit file     like     second independent loop   loop   identify case of    v   end of   know verb type occurring   look occurrence of of corpus second loop   brings second question   tricky misunderstood question of granularity   level of resolution adopting count of table      table counting occurrence sentence   level of resolution clear   sentence   looking specific   verb modal verb   solution   weirdly surprising   fact fairly obvious   choose level of resolution similar phenomenon studied possible   finally   turn      verb occurring modal verb   compute table association measure   thankfully   kind of question frequently work collostructional analysis thing need     define function matches   corpus file   collector vector   character vector inf collect infinitive of verb occurring modal verb     compute cell    b    numeric vector modal plus inf   initially set    determine sample size    b    c        load corpus file   trim sentence   look sequence of modal verb followed infinitive   store current   mpis   add number of match modal plus inf     extract current mpis case modal extract case lemma of verb   add inf     way   infs collect infinitive   length ultimately determine cell    b     loop   determine table frequency of    v      b   corpus size      b    c          v         v         e        know different verb occur          creating collector vector cell    c   second loop corpus file determine frequency of verb modal general     looking loop current mpis     save result format   coll analysis r   needs simple collexeme analysis   readme txt function need   challenging   rchoose file dir nearly   loop load corpus file scan   use tolower grep lower case sentence   use match find modal verb plus infinitive grep gsub extract infinitive   tabulate infinitive   create vector freq overall   rep      infinitive   enter second loop loop look of infinitive search expression created paste    add frequency of infinitive relevant slot of freqs overall   loop   use data frame save result relevant format     start   coll analysis r   sourcing www linguistics ucsb edu   faculty stgries teaching groningen coll analysis r   answer question   let rest     overall structure of script    qclwr    script        v r    read actual script rstudio   clear memory   load tcltk package   source exact match              define match   check code alternative inner loop   easier           compile result data frame save   csv file collocation collexeme analysis noun collocate speed adjective coca   fiction   worked example bnc xml annotationbecause bnc widely corpus xml widely form of annotation   explore corpus different format   specifically   look near synonymous speed adjective   fast   quick   rapid   swiftand noun premodify fiction component of corpus of contemporary american english   coca    available download second   want generate list     collocate provides year corpus datum attracted noun collocate of adjective   save spreadsheet   question arise   access coca   coha   deal section    case   jump ahead end of section moment   assignment mentioned   come   fact capital letter tolower ed corpus indicate real word   trickiest probably loop compute collect sort residual of adjective noun co occurrence line         important thing note use of droplevel r zero frequency sort of word attested datum   line         compact representation table of noun adjective created   stored immediate input chisq test   result of main significance test immediately jump residual of test output   essentially use association measure   strike strange   recall      section            association measure mi based ratio of observed expected frequency        section        residual of chi squared test     simulation        random        table shows mi value residual fact highly correlated   adj   r    of polynomial regression   second degree   of residual mis           coca coha   corpus   available     freely available     fact   nice solution problem form of extra assignment   write corpus conversion script changes bnc coca format exemplified figure collocates of shall coha            look collocate   time collocate window of word left word right of verb shall nineteenth century datum corpus of historical american english   coha    like coca   coha available download given similarity format   aspect of code similar previous      time want kind of different output   essentially small concordance display looks like     retrieve position of match   e    shall occur tagged modal verb   number            means need retrieve word position              match            match                    match               second match     achieved like   matchposition      matchposition      match second word corpus   penultimate   meaning subtraction addition of    result nonsensical position value   handle case   useful define function ranger provided code file   explore   general use of lapply anonymous function    function takes input     vector of number called position   typically position of match vector of word   e    example               argument   says collocate   e    slot   left right of match wants   default set want    programming exercise   want tweak function different number of collocate left right     argument desired min   indicates earliest vector position want collocate slot   default of course     word slot corpus   file       argument desired max   indicates vector position want collocate slot   default maximum of position   set length of vector of word subset word corpus   file   shown collocate       argument padded center   usually need change default setting of true   explain hereplay want know   check small example code file ranger gives possible collocate position corpus vector of certain length   pads remaining position nas output reliably equally long    display want exemplified table thing need     define ranger vector coha file path         coha file nineteenth century   bnc surrogate      define search term window span     create matrix seven column   figure    outer loop load corpus file   previous section    split column   access word lemma tag     determine modal verb tag     inner loop search search word looking intersection of position of word lemma position of modal verb tag   loop   use code twice     shall   putting loop right away makes script easy reuse search expression   change vector search term stays      position of search word   use ranger recover relevant   l   r collocate slot match matrix   add collocate previous search word file     change result data frame nicely save   result like figure function need   use function ranger   uses lapply apply seq number argument position   seq starting point maximum of desired min smallest starting point of collocate end point minimum of desired max end point of input vector   use rchoose dir dir nearly   coha file separate directory   use sapply dir look user specified directory retrieve file   use matrix create beginning of matrix result dump collocate   loop file   load readlines file        process tolower strsplit   previous section      use sapply      extract lemma tag   determine modal verb position grep   second loop   find intersection of search word   position of modal tag   position of intersecting match   time ranger return collocate slot   l   r   collocate slot unlisted subsetting vector lemma file   turn passed matrix   generates representation of type of figure   overall structure of script    qclwr    script        modals incoha r    read actual script rstudio   aspect of script worth additional comment   difficult of script   think   retrieval of collocate   slot   actual word   slot retrieved line        ranger return object collocate   slot     interrupted simulated loop   look like   means match   of shall   position remaining line           create nice dimension name   of corpus file repeated match   collocate      till underscore deleted sub   makes remainder of string begin digit year of file   year extracted substr              row name of matrix   column name number          represent   l    l    l      match   shall     r    r     r   final result   split infinitive final section co occurrence deals split infinitive   e    example boldly   contrast boldly   return bnc xml   folder time   answer following question     adverb verb observed split construction compared overall frequency of split vs   non split construction     combination of adverb verb split construction     idea of frequent construction   like know word frequent split non split infinitive corpus   saying certain construction occurs x million word intuitive understand   saying construction frequent word   b   c straightforward   thing need     define function whitespace vector corpus file     define search expression   find split infinitive   find non split one     create collector vector split   split   non split infinitive     nonsplit   interim result directory     qclwr    outputfiles         freqoutput    store frequency list of word file   later amalgamate frequency list section            load corpus file   trim need   look split nonsplit infinitive add respective collector vector     create frequency list of file save   rdata interimresults folder     loop   extract adverb verb split non split infinitive   means look frequent adverb verb construction count number of split non split infinitive     identify adverb attested construction   attested construction   raw frequency    percent split construction   higher number overall   baseline   percentage of split infinitive of split non split infinitive      split infinitive     percent of infinitive actually attested split construction     percent of time       percent result    plot   split preference   value       verb     create frequency table of split construction combination of adverb verb frequent split infinitive     finally   amalgamate frequency list         freqoutput   list word frequent kind of infinitive plus minus    percent   function need   use whitespace   uses gsub   use rchoose dir dir   use usual loop scan grep choose process file   use exact match    retrieve infinitive lemma overall frequency list   loop   use strsplit sapply whitespace extract adverb verb   use length count of infinitive construction   use intersect determine adverb construction   summarize matrix   apply prop table percentage of split infinitive   plot text abline visualize adverb   preference split construction   verb   frequency of verb adverb combination   use paste table   step consists of merging frequency list file   generate table   use loop load frequency list file merge long table   c    group frequency lemma tapply sum frequency of lemma   insertion long vector counter   looking bnc folder   data set small work computer state of art    finally   compute absolute difference of frequency construction frequency sort display differ construction frequency    percent     overall structure of script    qclwr    script        split infs r    read actual script rstudio   clear memory   load rchoicedialogs package   source exact match    abs lemma freq length nonsplit       length   nonsplit         logical vector subset lemma freq   result of sorted   application turning variety of case study involve application easily grouped   of   previous section dispersion   frequency   concordancing co occurrence     following script   hope   good example showcase variety potential of corpus linguistic method of datum use explore   corpus conversion   ice gb engaged corpus conversion activity   coca coha     tiny assignment   going   continued   process file million word british component of international corpus of english   release      pos tagged syntactically parsed corpus   of small section exemplified figure thing need     load rchoicedialogs package   exact match     set option warning soon arise      load file encoding differs expect handle      define vector corpus file   output directory     qclwr    outputfiles        icegb output    output file   look like figure    paste word coming sentence space output file output directory input corpus file   function need   use rchoose dir dir define corpus file dir create create output directory   loop load file scan   paste collapse    n    unlist result of stringsplitting occurrence of sentence tag   use exact match    find word location   tapply paste word sentence   collapse        cat result file output directory named paste        overall structure of script    qclwr    script        icegb r    read actual script rstudio   clear memory   load rchoicedialogs dplyr package   source exact   match          set warning option immediate warning loop   counter      corpus file              output progress report   of       load corpus file       paste string output sentence output file output directory          aspect of script worth additional comment     script short simple   check excurse end   shows change of loop argument vectorize false exact match     second proposes alternative part of loop dplyr       combines approach replace loop nicer looking      syntax   indexing application section play corpuslinguistic value se   lot of practical value   importantly   good programming exercise   use r indexing   application involve small of edition of qclwr   involve paper of   specifically   consists of      finding function name text version of page of proof of qclwr   edition      thing need     source exact match    load text file   essentially page copied pdf proof of edition of qclwr pasted text file      paste long string   split character vector occurrence of page marker repeated page of pdf proof   way   character vector element   of   proof page     find line code character vector   line contain r prompt           followed later line break indicator          line code   extract string likely function name   sequence of letter   period   underscore opening parenthesis     look potential function name character vector manuscript text collect location page number   of manuscript excerpt      finally   output function followed tabstop followed page number   separated         function need   use source load exact match    scan load text file    qclwr    inputfiles corp indexing    txt   r   use paste merge element long character vector unlist plus strsplit break character vector of page   use exact match    retrieve line code extract string function name     loop list of function name use grep find character vector book page store list   note helps grep returns position function attested page multiple time   index entry lists page word occurs      separate second loop use paste page number   separated comma space   cat output result     overall structure of script    qclwr    script       indexing r    read actual script rstudio   clear memory source exact match    loop   counter    current function   function candidate    loop   counter      seq index                paste of index entry tabstop page number   turn pasted comma space print line break index entry          aspect of script worth additional comment   script discussed far pretty simple   additional comment required     line                provide alternative solution r unlike forloop line                alternative use faster elegant function apply family require loop   alternative heavily commented check better understand thing   r way   prepare      note way of finding function name   stuff opening parenthesis   perfect   find head sapply list   head   sum tapply x     sum     checking attempt line          try hand   second similar previous   difference      index function name essentially word type manuscript      similar previous one   adds little twist   loading file windows version of unicode ucs   le particularly useful load file readlines file        encoding argument set   ucs   le    twist complex addresses fact index term mentioned successive page                 index usually print of sum           want time output index entry like   let approach looking index term    association measure    bam   b     assign qwe code shorter discussing line         noting of course   sigh   linux windows use different alphabetical sorting index term list element windows second linux          want change                                      nice given indicates occurrence of adjacent page number        step define object called range   contains hyphen difference page number     comma   expected immediately able come exotic solution dare claim solution good   elegant   functional   playing celex useful database research purpose celex database vector place   small search explore kind of thing   code file   provide result run code real celex database   tiny excerpt    section worth time     code particular code file     qclwr     script        celex r    use traditional r syntax nesting of function        operator package dplyr   obviously need load    book   discuss of   study code file explore   example discussed involves number of adjective syllable   line          traditional nested code shown line       ugly counterintuitive read inside   starting pronuns adjective     nicer way      read   pronunciation of adjective   strsplit syllabification code   figure example   pretend moment celex database segmental information lemma     column    of   epl cd     want find frequent different consonant cluster length english adjective   ignoring syllabification    pretend segmental information   need create   create vector consonant phoneme   c code   vowel phoneme   v code   create equally long   number of character   vector cs vs   use chartr transliteration like   want length of consonant cluster   need strsplit occurrence of   v    leave sequence of   c   measure length of of remaining list element   sapplying nchar    unlist consonant cluster length count   table    line          follow up     line                  find adjective maximal cluster length   second   recall celex database segmental information ignored     line match number section of structure   exercise   complicated   regular expression   goal match kind of format of number   easily come generate frequency list of   large   corpus want avoid potentially ten of thousand of frequency list entry different number   situation   probably want entry    num    similar     realistic situation   figure   encourage immediately look solution website retrieving adjective sequence untagged corpora section want sound trivial given previous section   want retrieve sequence of adjective base form   like big deal given     retrieved sequence of word looked split non split infinitive     section adds additional challenge   corpus want retrieve sequence of adjective tagged   case study   based chinese hong kong datum international corpus of learner english   icle    brown corpus of icame cd rom version       end of section access corpus      pursue following step strategy   retrieve adjective token bnc world edition   number going high   collect vector growing iteration use logic section         insert large vector defined loop counter   loop   pick frequent n adjective   like n          learner datum n          brown corpus    occurring tag occurrence of form untagged corpus file   retrieve sequence of adjective tag tag corpus file   icle corpus   actually save tagged corpus file search   brown corpus example   tag file immediately search memory   comment   use adam kilgarriff frequency list file result word tag combination exercise section        adjective tag   use tagged version of icle brown corpus   pretend access resource write script scratch practice help thing additional resource available   unlike script   write uses bnc xml annotation     package xml xml    thing need     load required package   rchoicedialogs   xml   xml     source exact   match     define whitespace     following section         define vector corpus file long character vector adjective token million slot   called adjective    set vector counter       usual kind of loop   use logic section        let r detect running windows system   depending   load   process   file function package xml   windows   xml    windows      way   retrieve adjective lemma insert relevant slot of adjective   note   interested adjective type   need frequency want pick n frequent type   unique type   save   growing   frequency table      loop   clean vector create save sorted frequency list of adjective lemma     find n         th highest frequency of adjective frequency retain adjective frequency   tag ch hk icle      define cn hk icle corpus file tagged use outer loop load   paste string     necessary   clean     file   use inner loop         adjective look of   surrounded word boundary parenthesized referencing   adjective tag of     of         adjective tagged   save file directory loaded   different       define annotated file new corpus file load of loop     look sequence of word tagged adjective   find   paste file of save      character vector     output vector   csv file     yes   match   recall perfect   precision bad match buried useless row file name     important think step of process    happen     b   c   want script   b   c       let turn second section   modify script    corpus adjective double extracted brown corpus of written american english        folder brown   icame   cd      adjective looking   approximately               learner datum     going save tagged brown corpus file   perform search right tagging   e    immediately loop     add sentence number match delete tag saving final result file   brown corpus file look like example shown figure loop   counter      corpus file               output progress report        load file        delete line initial annotation           paste long string           strsplit space   clean whitespace            continued     guess answer assignment   write corpus conversion script reads bnc file   hhv xml   makes look like file of brown corpus   e    exemplified figure type token ratio vocabulary growth   hamlet vs   macbeth application concerned type token ratio   crude measure of lexical richness repetitiveness   vocabulary growth     continued   let begin discussing compute type token ratio vocabulary growth curve small vector token   corpus    recommend started new project   create data set realistic small seen screen   start developing code     means follow script   function know   easy compute type token ratio   vocabulary growth curve compute   line plot shows position of token of vector x axis   section         type frequency axis   word   point coordinate divided point x coordinate provides point type token ratio   token   look like figure x coordinate of point obvious   number         element of token   means   given said   coordinate type token ratio of token slot multiplied number of token of slot   alternatively   coordinate of point number of unique type seen position read token slot    position   e    called type freq     note rightmost value     e    type token ratio of vector        times length of vector        info   approach trick   position token   essentially create vector includes element of token      store number of type   coords determine unique type        occurrence vector token match      f   shows token seventh position   far good   line magic of creating vector type freqs want   remember type freqs contains   far   line inserts    slot belongs new type token   output   second   new type represented      duplicated type represented     use cumsum create vector contains   position   cumulative sum of     e    type new till   earlier vector value       approach faster applied vector token         sampled   replacement   letter   approach create         character vector check of number of unique type   determines number of type    check script     small excursus   code integrated function ttr   defined heavily commented line          note important output component fifth called typescount   corresponds coordinate of vocabulary growth curve   function minimally requires vector of   word   token argument   want plot figure remainder of discussion uses function   want add little twist discussion   vocabulary growth curve dependent   degree   exact order of word corpus   unproblematic compute vocabulary growth value play novel order of word play novel    compute vocabularygrowth value corpus consisting of file   order of file typically arbitrary makes vocabulary growth curve plot bit dependent usually unmotivated order of file corpus comes   interesting approach deal plot vocabulary growth curve corpus interested         vocabulary growth curve   of      version of corpus word randomly reshuffled   add   thing need   function ttr defined   script relatively straightforward     load text file containing hamlet version project gutenberg     qclwr    inputfiles corp hamlet txt     crucially   need load blank line left intact   use find character name   discard   check input file     cleaning hamlet   split word     exact thing macbeth     qclwr    inputfiles corp macbeth   txt         apply new function ttr vector of word hamlet add point fifth component of output of ttr applied word macbeth     resampling approach   create list collector component   called collector hamlet   called collector macbeth   of list      element   of      element hamlet macbeth collect axis coordinate of      randomly sampled word order   e    called type freq      loop    obtain axis value plot element of collector     generate x axis value plot repeating   play separately   number sequence    length of play word      time     plot resampled vocabulary growth curve coordinate system   different color   transparency effect   play   function need   use rchoose file tolower scan   note argument blank line skip false   load play   identify line delete nchar immediately following line speaker name     use grep find line stage direction     apply negative subsetting discard line play   use unlist strsplit        split play word     need input vector of word ttr plot   begin plot hamlet   use point add macbeth    resampling   use function list vector       mode   list    create list collector   loop   randomly reorder play sample   apply ttr   collect coordinate fifth component   unlist coordinate part of collector   use rep seq             create x coordinate   finally   plot vocabulary growth curve period point character   minimize overplotting    define color rgb        add grid main diagonal abline     overall structure of script    qclwr    script        ttrs vg r    read actual script rstudio    skipping      of code explain basic of compute vocabulary growth curve      definition of ttr basically recycles code function definition explained detail code file   begin line        load hamlet            identify line hamlet        identify character name hamlet        identify line stage direction loop   counter      seq of resample                 reorder word of hamlet randomly         apply ttr             save resulting coordinate th slot of collector hamlet        macbeth        retrieve coordinate   e    type frequency   collector unlist            generate x coordinate   e    token index     hamlet longer macbeth   vocabulary growth curve overlap considerably long macbeth word   suggesting term of lexical diversity   play different   aspect of script worth additional comment   of particularly challenging programming wise   thing maybe worth mentioning line           sure   create plot   reason use variant essentially pedantry   line       apply ttr ham word plot     assigned result of ttr object result hamlet later   line      corresponding object mac ttr hyphenated form     space instead of hyphen   b   instead of hyphen respectively     load corpus file   tolower   trim sentence   look alternate spelling of hyphenated form add frequency freq space freq nothing     compile result data frame   save   explore table of percentage of spelling variant   function need   new   use rchoose dir dir nearly dir create create interim result folder   use loop scan tolower corpus file   grep sentence   use exact match    find hyphenated form sub clean away tag space   apply table create frequency list save   second   use character numeric create collector vector merge hyphenated form frequency corpus   loop load frequency list file     hyphenated form file   merge subsetting   incrementing vector counter iteration   section          use nzchar discard unused slot of collector vector use tapply sum form   frequency use subsetting pick frequency of          create collector vector frequency of non hyphenated form rep length set     second loop corpus file   time lapply exact match    look non hyphenated equivalent frequent hyphenated form   nicely avoids loop     count frequency   sapply        length   add frequency   finally   compile result data frame generate table of proportion lists form spelling variant prefers     overall structure of script    qclwr    script        hyphenation r    read actual script rstudio   clear memory load package rchoicedialogs dplyr     source exact   match          define vector corpus file        create directory interim result file         loop   counter      corpus file    save table interim result file          interim result directory          define long collector vector hyph hyph freq form frequency respectively   set vector counter            loop   counter      dir                output progress report       load th frequency list file       hyphenated form file              insert observed form frequency available slot of hyph hyph freq search expression form space hyphen of argument of exact match    time   argument exact match    receives one   current sentence vector searched   concordance output gets suppressed   result of lapply execution list element search expression   nothing element   interested info exact match    provides   interested knowing instance found of search expression   retrievable output component        pass list        sapply   extracts        element of list component lexical frequency profile approaching end of chapter   fitting of complex one   involves notion of lexical frequency profile   corpus based approach applied linguistics concerned kind of vocabulary second foreign language learner use speaking writing   laufer    nation       introduction   meara       critique   laufer       response    involves retrieving word text produced learner classifying word belonging of word family word frequency bin   bin frequently come form of base word file establish word family frequency based grouping of word family   consider figure    extract number line add number     loop   compile data frame structure allows process thing nicely   technical term meaning   r like       define path wikipedia entry text file create list list   of table collect result file     loop   load file   split word   create sorted frequency list of word type frequency   compute yule lexical richness measure     word type   find base word list file number     word     base word list       word type   finds family word     word     family word word        family word of word token file   sum frequency of member     word     member of family   headed       comprises          word         occur          time respectively   means need      family frequency of            loop   compile result data frame save output file of programming language studied of looks like   note row             store list of table programming language frequency type different base word list attested   easier plotting later      finally   generate save file programming language bar plot provides percentage of type wikipedia entry base word list file       compute chi squared test lexical frequency profile of article perl significantly different python   function need   definition of match multiple time   function yules measure requires sum   table table              list   use rchoose file define base word list file   later wikipedia entry    read right encoding   use gsub   grep   match define list file number   word   number     define family word   use grep   line contain family word   sapply       yes   regular minus   max min compute matrix position difference excerpted   end   use datum frame write table merge result save   turn wikipedia entry   scan   strsplit word   create sorted frequency list   use match assign base word list number family word word type of wikipedia entry   challenging of summing family frequency assigning relevant type tapply            sum     use match subsetting assignment   use strsplit unlist paste file name result   save result programming language data frame write table generate barplot   annotate text save file png dev   end   use chisq test chi squared test goodness of fit     overall structure of script    qclwr    script        lfp r    read actual script rstudio   clear memory   load package rchoicedialogs loop   counter      seq baseword file                output progress report       load current base word list file discard line smallest value column corresponding row           insert collector vector          use match find line final number line            store relevant collector vector        compile collector vector data frame save   csv file            define vector path wikipedia entry text file split word   discard element   create sorted frequency list             readability sake   create short telling name word type frequency            compute measure of lexical richness paste output file barplot        table list percentage stating word type base word list             generate annotate bar plot save png file            compute chi squared test goodness of fit test lexical frequency profile entry perl significantly different python             explore observed frequency compare expected one residual            aspect of script worth additional comment   script complex part of dealt detail    understand explanation of line          identify family word   explanation line          obtain order summed family frequency word family     want mention small thing plotting   continued   case study      statistical analysis     note generation of plot function par   usr    helpful    frequency of word corpus corpus b differ     frequency of word corpus differ corpus b   thing   example use teach difference   frequency of word horrible   horrifying   horrid brown lob corpus   line          code file    chi squared test test scenario   second chi squared test test second   determines frequency brown corpus differ expected lob   vice versa   note test return different p value important understand different hypothesis test   chat file     eve mlus ttrs assignment   turn completely different corpus format   dealing unannotated file   lot of xml example   bit of sgml   tabular version of coca coha corpora   brown ice gb format   turning chat format widely language acquisition corpora     case study interesting showcase r allows handle datum perform analysis normal software handle   widespread corpus linguistic software application require information concerning     particular sentence line   trivial form   reflected bnc fact expression   wanted    annotated line                    w c    vvd   hw   want   pos   verb   wanted    w    w c    pnp   hw     pos   pron      w     w c       hw     pos   prep      w    c c    pun      c        wanted   vvd pnp   pun want   following excerpt file   eve    cha   brown datum of childes database current task   want explore datum of of widely studied child acquiring english   eve    splits argument digit   unlists result   turns numeric vector     numeric vector part   adds         returns plus second divided      plus divided         second plot   interested exploring finer resolution of lus ttrs     plot type token ratio utterance length eve recording   thing changed    plot ecdf curve of length of utterance   function need   definition of match   new function need define age converter simple function floor    floor     plus   point   need of capability of age converter   string number    use rchoose file define eve corpus file function vector   mode   list    define collector structure   load corpus file scan   merge paste       collapse        gsub line initial space away replace space   strsplit file apart   unlist   cleaning multiple gsub   strsplit utterance word retain   grep   word character   store result obtain sapplying function list count length compute type token ratio   anonymous inline function    compute mean type token ratio type token   mean of length of utterance mean   avoid effect outlier use argument trim       discard smallest largest    percent of datum   use matches extract file header of child age paste name vector list element   summarize collector vector sapply summary   sapply function shapiro test utterance length of file subset p value   surprise   surprise        normally distributed   use nested loop compute wilcox test combination of element of lus   store negative log     p value large          matrix called test          corpus file    finally   visualize datum   apply age converter eve age string   use par mar       room right axis label   use plot create scatterplot of mlus age   define axis manually use mtext create axis label   use line add type token ratio plot add smoother line lowess         comparison of recording   generate regular scatterplot of type token ratio mlus   jitter point avoid overplotting add usual grid   finally   use plot ecdf   ecdf comparison plot     overall structure of script    qclwr    script        childesmlus r    read actual script rstudio   clear memory   load package dplyr rchoicedialogs plot mttr            mttrs             add smoother grid            restore normal plotting margin        set plotting window row column        panel   plot scatterplot of jittered type token ratio jittered mlu value of recording aspect of script worth additional comment   aspect of script term of loop text processing particularly difficult   operation loop   simple one   position of script end largely complex statistical visualization issue      significance test   line           code of plot   involves different tweak   thoroughly line line   suggestion end     try write function right axis   argument tickmark of left axis   want corresponding tickmark right   minimum maximum right axis value   determine range of value want label right    return right axis tickmark axis value rescaled right axis left plotting   second   proceeded slightly simplistic manner way tried     word utterance eve repeated word        time distort datum trimmed mean   way of careful thing include check right place flag omit case   practice assignment   chat file     merging multiple file final chat file   involves of data management task   makes possible linguistically interesting search   specifically   deal multiple file time   want write script reads multiple chat file outputs list data frame utterance row annotation tier column   allow perform nice search regular expression multiple tier identify row different strsplit file apart   unlist   retain   grep   utterance annotation   second loop line   use substr extract speaker annotation name    use conditional distinguish utterance annotation   utterance   fill relevant slot of collector list   annotation   use second conditional length check annotation     store annotation     paste newly numbered annotation store annotation   loop   use order order component of chat file list datum frame convert data frame   column length   apply max result of checking column   length sapply   finally   store data frame write table     overall structure of script    qclwr    script        merging chat r    read actual script rstudio   clear memory   load rchoicedialogs        define vector chat file corpus file        create collector list set utterance counter          loop   counter      seq chat file     paste string collapse argument unattested string loop   counter    j   seq current chat file                  extract line type   utterance annotation   current line        identifier   speaker of annotation type         line content   save line annotation chat file list   continued   think computer searching of corpora useful tool provided grammarian invention of writing     stringi      stringr    package   think following one useful learn   tm   rcmdrplugin temis   opennlp   korpus   hunspell   wordnet     explore task view useful tool help research   corpus linguistically interesting package   provides lot of useful functionality   readr    index